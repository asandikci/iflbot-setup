{"version":3,"file":"main.js","mappings":";;;;;;;;;;AAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,eAAe,mBAAO,CAAC,8DAAgB;;AAEvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,uBAAuB;AACvB;AACA;AACA;;AAEA;AACA;AACA,mCAAmC;AACnC,oCAAoC;AACpC;AACA;AACA;;;AAGA;AACA;AACA,wCAAwC,GAAG,IAAI;AAC/C;AACA;AACA;;AAEA;AACA,qBAAqB,KAAK;;AAE1B;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qBAAqB,aAAa;AAClC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;AAC/B,uCAAuC,GAAG;AAC1C,YAAY,GAAG,yBAAyB;AACxC;AACA;AACA,8BAA8B;AAC9B,cAAc,GAAG;AACjB;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,WAAW,YAAY;AACvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,qBAAqB,KAAK;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,oBAAoB,YAAY;AAChC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,oCAAoC,0BAA0B;AAC9D;;AAEA,kBAAkB,cAAc;AAChC,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACvMA;AACA;AACA,oBAAoB,eAAe;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACZA,cAAc,mBAAO,CAAC,kDAAS;AAC/B,kBAAkB,mBAAO,CAAC,0DAAa;;AAEvC;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACRA,aAAa,mBAAO,CAAC,gDAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;;AAEN;AACA,4BAA4B,SAAS;AACrC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,WAAW;AAClE;;AAEA;AACA;AACA,qDAAqD,MAAM;AAC3D;;AAEA;AACA;AACA,6DAA6D,KAAK,GAAG,OAAO;AAC5E;;AAEA,oDAAoD,cAAc,OAAO,KAAK,GAAG,OAAO;AACxF;;AAEA;AACA,yDAAyD,KAAK,GAAG,OAAO;AACxE;;AAEA;AACA;AACA;AACA,gEAAgE,KAAK,GAAG,OAAO;AAC/E;;AAEA;AACA,uDAAuD,cAAc,OAAO,KAAK,GAAG,OAAO;AAC3F;;AAEA;AACA;AACA,iEAAiE,KAAK,GAAG,OAAO;AAChF;;AAEA;AACA,4BAA4B,cAAc,sCAAsC;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC9jCA,aAAa,mBAAO,CAAC,gDAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA,kCAAkC,UAAU;;AAE5C;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB,UAAU;AACV;AACA;AACA;AACA,0BAA0B,mBAAmB;AAC7C,cAAc;AACd;AACA;AACA,0BAA0B,iDAAiD;AAC3E;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC,gBAAgB;AACvD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACpQA;AACA,8BAA8B;AAC9B,uBAAuB;AACvB,0BAA0B;;;;;;;;;;;ACH1B,gBAAgB,mBAAO,CAAC,2DAAgB;;AAExC;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;;;;;;;;;;;AClCa;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gBAAgB;AAChB,sBAAsB,mBAAO,CAAC,cAAI;AAClC,wBAAwB,mBAAO,CAAC,kBAAM;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,iBAAiB;AAC7B;AACA;AACA,4CAA4C,4DAA4D,0CAA0C,IAAI;AACtJ;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,YAAY,iBAAiB;AAC7B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,+BAA+B;AAC9G;AACA;AACA,qEAAqE,eAAe;AACpF;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY,UAAU;AACtB;AACA;AACA;AACA;AACA,0GAA0G,0CAA0C;AACpJ;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,gBAAgB;AAC3B,YAAY,2BAA2B;AACvC;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,oDAAoD;AACnI;AACA;AACA,qEAAqE,eAAe;AACpF;AACA,SAAS;AACT,KAAK;AACL;AACA,gBAAgB;;;;;;;;;;;AC7IhB;AACA;;AAEA,0BAA0B,MAAM,OAAO,mBAAO,CAAC,kBAAM,IAAI,aAAa;AACtE;AACA;AACA;;AAEA;AACA,aAAa,mBAAO,CAAC,gEAAiB;;AAEtC;AACA,SAAS,sCAAsC;AAC/C,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS,0BAA0B;AACnC,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,cAAc;AACd;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,qDAAqD;;AAErD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,MAAM;AACN,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,6BAA6B,QAAQ,MAAM;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;;AAEA,MAAM;AACN,IAAI;;AAEJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sBAAsB;AACtC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yBAAyB,QAAQ;AACjC;AACA;AACA;;AAEA,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,4CAA4C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR,QAAQ;AACR;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AAC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","sources":["webpack://c-cpp-runner/./node_modules/balanced-match/index.js","webpack://c-cpp-runner/./node_modules/brace-expansion/index.js","webpack://c-cpp-runner/./node_modules/concat-map/index.js","webpack://c-cpp-runner/./node_modules/json5/lib/index.js","webpack://c-cpp-runner/./node_modules/json5/lib/parse.js","webpack://c-cpp-runner/./node_modules/json5/lib/stringify.js","webpack://c-cpp-runner/./node_modules/json5/lib/unicode.js","webpack://c-cpp-runner/./node_modules/json5/lib/util.js","webpack://c-cpp-runner/./node_modules/lookpath/lib/index.js","webpack://c-cpp-runner/./node_modules/minimatch/minimatch.js","webpack://c-cpp-runner/./src/executor/builder.ts","webpack://c-cpp-runner/./src/executor/cleaner.ts","webpack://c-cpp-runner/./src/executor/debugger.ts","webpack://c-cpp-runner/./src/executor/runner.ts","webpack://c-cpp-runner/./src/extension.ts","webpack://c-cpp-runner/./src/handler/folderHandler.ts","webpack://c-cpp-runner/./src/handler/modeHandler.ts","webpack://c-cpp-runner/./src/items/statusBarItems.ts","webpack://c-cpp-runner/./src/provider/callbackProvider.ts","webpack://c-cpp-runner/./src/provider/fileProvider.ts","webpack://c-cpp-runner/./src/provider/launchProvider.ts","webpack://c-cpp-runner/./src/provider/propertiesProvider.ts","webpack://c-cpp-runner/./src/provider/settingsProvider.ts","webpack://c-cpp-runner/./src/utils/fileUtils.ts","webpack://c-cpp-runner/./src/utils/general.ts","webpack://c-cpp-runner/./src/utils/systemUtils.ts","webpack://c-cpp-runner/./src/utils/types.ts","webpack://c-cpp-runner/./src/utils/vscodeUtils.ts","webpack://c-cpp-runner/external commonjs \"vscode\"","webpack://c-cpp-runner/external node-commonjs \"child_process\"","webpack://c-cpp-runner/external node-commonjs \"fs\"","webpack://c-cpp-runner/external node-commonjs \"os\"","webpack://c-cpp-runner/external node-commonjs \"path\"","webpack://c-cpp-runner/webpack/bootstrap","webpack://c-cpp-runner/webpack/before-startup","webpack://c-cpp-runner/webpack/startup","webpack://c-cpp-runner/webpack/after-startup"],"sourcesContent":["'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","const parse = require('./parse')\nconst stringify = require('./stringify')\n\nconst JSON5 = {\n    parse,\n    stringify,\n}\n\nmodule.exports = JSON5\n","const util = require('./util')\n\nlet source\nlet parseState\nlet stack\nlet pos\nlet line\nlet column\nlet token\nlet key\nlet root\n\nmodule.exports = function parse (text, reviver) {\n    source = String(text)\n    parseState = 'start'\n    stack = []\n    pos = 0\n    line = 1\n    column = 0\n    token = undefined\n    key = undefined\n    root = undefined\n\n    do {\n        token = lex()\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]()\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n}\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name]\n    if (value != null && typeof value === 'object') {\n        for (const key in value) {\n            const replacement = internalize(value, key, reviver)\n            if (replacement === undefined) {\n                delete value[key]\n            } else {\n                value[key] = replacement\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState\nlet buffer\nlet doubleQuote\nlet sign\nlet c\n\nfunction lex () {\n    lexState = 'default'\n    buffer = ''\n    doubleQuote = false\n    sign = 1\n\n    for (;;) {\n        c = peek()\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]()\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek()\n\n    if (c === '\\n') {\n        line++\n        column = 0\n    } else if (c) {\n        column += c.length\n    } else {\n        column++\n    }\n\n    if (c) {\n        pos += c.length\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read()\n            return\n\n        case '/':\n            read()\n            lexState = 'comment'\n            return\n\n        case undefined:\n            read()\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read()\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read()\n            lexState = 'multiLineComment'\n            return\n\n        case '/':\n            read()\n            lexState = 'singleLineComment'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read()\n            lexState = 'multiLineCommentAsterisk'\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read()\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read()\n            return\n\n        case '/':\n            read()\n            lexState = 'default'\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read()\n        lexState = 'multiLineComment'\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read()\n            lexState = 'default'\n            return\n\n        case undefined:\n            read()\n            return newToken('eof')\n        }\n\n        read()\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read()\n            literal('ull')\n            return newToken('null', null)\n\n        case 't':\n            read()\n            literal('rue')\n            return newToken('boolean', true)\n\n        case 'f':\n            read()\n            literal('alse')\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1\n            }\n\n            lexState = 'sign'\n            return\n\n        case '.':\n            buffer = read()\n            lexState = 'decimalPointLeading'\n            return\n\n        case '0':\n            buffer = read()\n            lexState = 'zero'\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read()\n            lexState = 'decimalInteger'\n            return\n\n        case 'I':\n            read()\n            literal('nfinity')\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read()\n            literal('aN')\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"')\n            buffer = ''\n            lexState = 'string'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read()\n        const u = unicodeEscape()\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u\n        lexState = 'identifierName'\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read()\n            return\n\n        case '\\\\':\n            read()\n            lexState = 'identifierNameEscape'\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read()\n        const u = unicodeEscape()\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u\n        lexState = 'identifierName'\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read()\n            lexState = 'decimalPointLeading'\n            return\n\n        case '0':\n            buffer = read()\n            lexState = 'zero'\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read()\n            lexState = 'decimalInteger'\n            return\n\n        case 'I':\n            read()\n            literal('nfinity')\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read()\n            literal('aN')\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read()\n            lexState = 'decimalPoint'\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read()\n            lexState = 'hexadecimal'\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read()\n            lexState = 'decimalPoint'\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalFraction'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalFraction'\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read()\n            lexState = 'decimalExponent'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read()\n            lexState = 'decimalExponentSign'\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalExponentInteger'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read()\n            lexState = 'decimalExponentInteger'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read()\n            lexState = 'hexadecimalInteger'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read()\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read()\n            buffer += escape()\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read()\n                return newToken('string', buffer)\n            }\n\n            buffer += read()\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read()\n                return newToken('string', buffer)\n            }\n\n            buffer += read()\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c)\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read()\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value'\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read()\n            lexState = 'identifierName'\n            return\n\n        case '\\\\':\n            read()\n            lexState = 'identifierNameStartEscape'\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"')\n            lexState = 'string'\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read()\n            lexState = 'identifierName'\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value'\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value'\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n}\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek()\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read()\n    }\n}\n\nfunction escape () {\n    const c = peek()\n    switch (c) {\n    case 'b':\n        read()\n        return '\\b'\n\n    case 'f':\n        read()\n        return '\\f'\n\n    case 'n':\n        read()\n        return '\\n'\n\n    case 'r':\n        read()\n        return '\\r'\n\n    case 't':\n        read()\n        return '\\t'\n\n    case 'v':\n        read()\n        return '\\v'\n\n    case '0':\n        read()\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read()\n        return hexEscape()\n\n    case 'u':\n        read()\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read()\n        return ''\n\n    case '\\r':\n        read()\n        if (peek() === '\\n') {\n            read()\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = ''\n    let c = peek()\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read()\n\n    c = peek()\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read()\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = ''\n    let count = 4\n\n    while (count-- > 0) {\n        const c = peek()\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read()\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push()\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value\n            parseState = 'afterPropertyName'\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop()\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue'\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push()\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop()\n            return\n        }\n\n        push()\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName'\n            return\n\n        case '}':\n            pop()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue'\n            return\n\n        case ']':\n            pop()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n}\n\nfunction push () {\n    let value\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {}\n            break\n\n        case '[':\n            value = []\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value\n    } else {\n        const parent = stack[stack.length - 1]\n        if (Array.isArray(parent)) {\n            parent.push(value)\n        } else {\n            parent[key] = value\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value)\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue'\n        } else {\n            parseState = 'beforePropertyName'\n        }\n    } else {\n        const current = stack[stack.length - 1]\n        if (current == null) {\n            parseState = 'end'\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue'\n        } else {\n            parseState = 'afterPropertyValue'\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop()\n\n    const current = stack[stack.length - 1]\n    if (current == null) {\n        parseState = 'end'\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue'\n    } else {\n        parseState = 'afterPropertyValue'\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`)\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    }\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16)\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message)\n    err.lineNumber = line\n    err.columnNumber = column\n    return err\n}\n","const util = require('./util')\n\nmodule.exports = function stringify (value, replacer, space) {\n    const stack = []\n    let indent = ''\n    let propertyList\n    let replacerFunc\n    let gap = ''\n    let quote\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space\n        quote = replacer.quote\n        replacer = replacer.replacer\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer\n    } else if (Array.isArray(replacer)) {\n        propertyList = []\n        for (const v of replacer) {\n            let item\n\n            if (typeof v === 'string') {\n                item = v\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v)\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item)\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space)\n    } else if (space instanceof String) {\n        space = String(space)\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space))\n            gap = '          '.substr(0, space)\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10)\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key]\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key)\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key)\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value)\n        }\n\n        if (value instanceof Number) {\n            value = Number(value)\n        } else if (value instanceof String) {\n            value = String(value)\n        } else if (value instanceof Boolean) {\n            value = value.valueOf()\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value, false)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        }\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        }\n\n        let product = ''\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i]\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++\n                product += c\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00'\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c]\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16)\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length)\n                continue\n            }\n\n            product += c\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b)\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar])\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value)\n\n        let stepback = indent\n        indent = indent + gap\n\n        let keys = propertyList || Object.keys(value)\n        let partial = []\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value)\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':'\n                if (gap !== '') {\n                    member += ' '\n                }\n                member += propertyString\n                partial.push(member)\n            }\n        }\n\n        let final\n        if (partial.length === 0) {\n            final = '{}'\n        } else {\n            let properties\n            if (gap === '') {\n                properties = partial.join(',')\n                final = '{' + properties + '}'\n            } else {\n                let separator = ',\\n' + indent\n                properties = partial.join(separator)\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}'\n            }\n        }\n\n        stack.pop()\n        indent = stepback\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key, true)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0))\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key, true)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key, true)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value)\n\n        let stepback = indent\n        indent = indent + gap\n\n        let partial = []\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value)\n            partial.push((propertyString !== undefined) ? propertyString : 'null')\n        }\n\n        let final\n        if (partial.length === 0) {\n            final = '[]'\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',')\n                final = '[' + properties + ']'\n            } else {\n                let separator = ',\\n' + indent\n                let properties = partial.join(separator)\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']'\n            }\n        }\n\n        stack.pop()\n        indent = stepback\n        return final\n    }\n}\n","// This is a generated file. Do not edit.\nmodule.exports.Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/\nmodule.exports.ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/\nmodule.exports.ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/\n","const unicode = require('../lib/unicode')\n\nmodule.exports = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lookpath = void 0;\nvar fs = __importStar(require(\"fs\"));\nvar path = __importStar(require(\"path\"));\nvar isWindows = /^win/i.test(process.platform);\n/**\n * Sometimes, people want to look for local executable files\n * which are specified with either relative or absolute file path.\n * @private\n * @param cmd\n * @return {string} An absolute path of given command, or undefined.\n */\nvar isFilepath = function (cmd) {\n    return cmd.includes(path.sep) ? path.resolve(cmd) : undefined;\n};\n/**\n * Just promisifies \"fs.access\"\n * @private\n * @param {string} fpath An absolute file path with an applicable extension appended.\n * @return {Promise<string>} Resolves absolute path or empty string.\n */\nvar access = function (fpath) {\n    return new Promise(function (resolve) { return fs.access(fpath, fs.constants.X_OK, function (err) { return resolve(err ? undefined : fpath); }); });\n};\n/**\n * Resolves if the given file is executable or not, regarding \"PATHEXT\" to be applied.\n * @private\n * @param {string} abspath A file path to be checked.\n * @return {Promise<string>} Resolves the absolute file path just checked, or undefined.\n */\nvar isExecutable = function (abspath, opt) {\n    if (opt === void 0) { opt = {}; }\n    return __awaiter(void 0, void 0, void 0, function () {\n        var envvars, exts, bins;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    envvars = opt.env || process.env;\n                    exts = (envvars.PATHEXT || '').split(path.delimiter).concat('');\n                    return [4 /*yield*/, Promise.all(exts.map(function (ext) { return access(abspath + ext); }))];\n                case 1:\n                    bins = _a.sent();\n                    return [2 /*return*/, bins.find(function (bin) { return !!bin; })];\n            }\n        });\n    });\n};\n/**\n * Returns a list of directories on which the target command should be looked for.\n * @private\n * @param {string[]} opt.include Will be added to \"PATH\" env.\n * @param {string[]} opt.exclude Will be filtered from \"PATH\" env.\n * @return {string[]} Directories to dig into.\n */\nvar getDirsToWalkThrough = function (opt) {\n    var envvars = opt.env || process.env;\n    var envname = isWindows ? 'Path' : 'PATH';\n    return (envvars[envname] || '').split(path.delimiter).concat(opt.include || []).filter(function (p) { return !(opt.exclude || []).includes(p); });\n};\n/**\n * Returns async promise with absolute file path of given command,\n * and resolves with undefined if the command not found.\n * @param {string} command Command name to look for.\n * @param {LookPathOption} opt Options for lookpath.\n * @return {Promise<string|undefined>} Resolves absolute file path, or undefined if not found.\n */\nfunction lookpath(command, opt) {\n    if (opt === void 0) { opt = {}; }\n    return __awaiter(this, void 0, void 0, function () {\n        var directpath, dirs, bins;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    directpath = isFilepath(command);\n                    if (directpath)\n                        return [2 /*return*/, isExecutable(directpath, opt)];\n                    dirs = getDirsToWalkThrough(opt);\n                    return [4 /*yield*/, Promise.all(dirs.map(function (dir) { return isExecutable(path.join(dir, command), opt); }))];\n                case 1:\n                    bins = _a.sent();\n                    return [2 /*return*/, bins.find(function (bin) { return !!bin; })];\n            }\n        });\n    });\n}\nexports.lookpath = lookpath;\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n}\nminimatch.sep = path.sep\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {}\n  var t = {}\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch\n  }\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  }\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  }\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  }\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  }\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  }\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  assertValidPattern(pattern)\n\n  if (!options) options = {}\n\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n  this.partial = !!options.partial\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments) }\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  assertValidPattern(pattern)\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  assertValidPattern(pattern)\n\n  var options = this.options\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR\n    else\n      pattern = '*'\n  }\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i)\n        try {\n          RegExp('[' + cs + ']')\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE)\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n          hasMagic = hasMagic || sp[1]\n          inClass = false\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      hit = f === p\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport { SettingsProvider } from '../provider/settingsProvider';\nimport {\n\tfilesInDir,\n\tgetLanguage,\n\tisCppSourceFile,\n\tisCSourceFile,\n\tisSourceFile,\n\tmkdirRecursive,\n\tpathExists,\n} from '../utils/fileUtils';\nimport { Builds, Languages, OperatingSystems } from '../utils/types';\nimport { getProcessExecution } from '../utils/vscodeUtils';\n\nconst EXTENSION_NAME = 'C_Cpp_Runner';\n\nexport async function executeBuildTask(\n  settingsProvider: SettingsProvider,\n  activeFolder: string,\n  buildMode: Builds,\n  singleFileBuild: boolean,\n) {\n  const appendSymbol = '&&';\n\n  const language = getLanguage(activeFolder);\n\n  let files: string[];\n  if (!singleFileBuild) {\n    files = filesInDir(activeFolder);\n  } else {\n    const currentFile = vscode.window.activeTextEditor?.document.fileName;\n    if (!currentFile) return;\n\n    const isSource = isSourceFile(path.extname(currentFile));\n    if (!isSource) return;\n\n    files = [path.basename(currentFile)];\n  }\n\n  const buildDir = path.join(activeFolder, 'build');\n  const modeDir = path.join(buildDir, `${buildMode}`);\n\n  if (!pathExists(modeDir)) {\n    mkdirRecursive(modeDir);\n  }\n\n  const operatingSystem = settingsProvider.operatingSystem;\n\n  let executableName: string;\n  if (operatingSystem === OperatingSystems.windows) {\n    executableName = `out${buildMode}.exe`;\n  } else {\n    executableName = `out${buildMode}`;\n  }\n\n  const executablePath = path.join(modeDir, executableName);\n\n  let commandLine: string | undefined;\n  if (\n    operatingSystem === OperatingSystems.windows &&\n    settingsProvider.useMsvc\n  ) {\n    commandLine = executeBuildTaskMsvcBased(\n      settingsProvider,\n      activeFolder,\n      buildMode,\n      language,\n      files,\n      modeDir,\n      appendSymbol,\n      executablePath,\n    );\n  } else {\n    commandLine = executeBuildTaskUnixBased(\n      settingsProvider,\n      activeFolder,\n      buildMode,\n      language,\n      files,\n      modeDir,\n      appendSymbol,\n      executablePath,\n    );\n  }\n\n  if (!commandLine) return;\n\n  const task_name = 'Build';\n\n  const definition = {\n    type: 'shell',\n    task: task_name,\n  };\n\n  const execution = getProcessExecution(\n    operatingSystem,\n    settingsProvider.useMsvc,\n    commandLine,\n    activeFolder,\n  );\n\n  const problemMatcher =\n    operatingSystem === OperatingSystems.windows && settingsProvider.useMsvc\n      ? ['$msCompile']\n      : ['$gcc'];\n\n  const task = new vscode.Task(\n    definition,\n    vscode.TaskScope.Workspace,\n    task_name,\n    EXTENSION_NAME,\n    execution,\n    problemMatcher,\n  );\n\n  await vscode.tasks.executeTask(task);\n}\n\nfunction executeBuildTaskUnixBased(\n  settingsProvider: SettingsProvider,\n  activeFolder: string,\n  buildMode: Builds,\n  language: Languages,\n  files: string[],\n  modeDir: string,\n  appendSymbol: string,\n  executablePath: string,\n) {\n  let compiler: string | undefined;\n  let standard: string | undefined;\n\n  if (language === Languages.cpp) {\n    compiler = settingsProvider.cppCompilerPath;\n    standard = settingsProvider.cppStandard;\n  } else {\n    compiler = settingsProvider.cCompilerPath;\n    standard = settingsProvider.cStandard;\n  }\n\n  const useWarnings = settingsProvider.enableWarnings;\n  const warningsAsErrors = settingsProvider.warningsAsError;\n  let warnings: string = '';\n  if (useWarnings) {\n    warnings = settingsProvider.warnings.join(' ');\n  }\n  if (useWarnings && warningsAsErrors) {\n    warnings += ' -Werror';\n  }\n  const includePaths = settingsProvider.includePaths;\n  const compilerArgs = settingsProvider.compilerArgs;\n  const linkerArgs = settingsProvider.linkerArgs;\n\n  let fullCompilerArgs = '';\n  let fullLinkerArgs = '';\n\n  if (warnings) {\n    fullCompilerArgs += warnings;\n  }\n  if (standard) {\n    fullCompilerArgs += ` --std=${standard}`;\n  }\n  if (buildMode === Builds.debug) {\n    fullCompilerArgs += ' -g3 -O0';\n  } else {\n    fullCompilerArgs += ' -O3 -DNDEBUG';\n  }\n  if (compilerArgs && compilerArgs.length > 0) {\n    fullCompilerArgs += ' ' + compilerArgs.join(' ');\n  }\n  if (includePaths && includePaths.length > 0) {\n    for (const includePath of includePaths) {\n      if (includePath.includes('$(default)')) continue;\n\n      const hasSpace = includePath.includes(' ');\n\n      if (hasSpace) {\n        fullCompilerArgs += ` -I\"${includePath}\"`;\n      } else {\n        fullCompilerArgs += ` -I${includePath}`;\n      }\n    }\n  }\n\n  if (linkerArgs && linkerArgs.length > 0) {\n    fullLinkerArgs += ' ' + linkerArgs.join(' ');\n  }\n\n  let commandLine: string = '';\n\n  const objectFiles: string[] = [];\n\n  let idx = -1;\n\n  for (const file of files) {\n    const fileExtension = path.parse(file).ext;\n\n    if (language === Languages.c && !isCSourceFile(fileExtension)) {\n      continue;\n    } else if (language === Languages.cpp && !isCppSourceFile(fileExtension)) {\n      continue;\n    }\n\n    idx++;\n\n    const fileBaseName = path.parse(file).name;\n    modeDir = modeDir.replace(activeFolder, '');\n\n    let objectFilePath = path.join(modeDir, fileBaseName + '.o');\n    if (!objectFilePath.startsWith('.')) {\n      objectFilePath = '.' + objectFilePath;\n    }\n\n    objectFiles.push(objectFilePath);\n\n    const hasSpace = file.includes(' ');\n    let fullFileArgs;\n    if (hasSpace) {\n      fullFileArgs = `-c \"${file}\" -o \"${objectFilePath}\"`;\n    } else {\n      fullFileArgs = `-c ${file} -o ${objectFilePath}`;\n    }\n\n    if (idx === 0) {\n      commandLine += `${compiler} ${fullCompilerArgs} ${fullFileArgs}`;\n    } else {\n      commandLine += ` ${appendSymbol} ${compiler} ${fullCompilerArgs} ${fullFileArgs}`;\n    }\n  }\n\n  // Exe task\n  let objectFilesStr: string = '';\n  for (const objectfile of objectFiles) {\n    objectFilesStr += ` ${objectfile}`;\n  }\n\n  if (objectFilesStr === '') return;\n\n  executablePath = executablePath.replace(activeFolder, '');\n  if (!executablePath.startsWith('.')) {\n    executablePath = '.' + executablePath;\n  }\n\n  const fullObjectFileArgs = `${objectFilesStr} -o ${executablePath}`;\n\n  commandLine += ` ${appendSymbol} ${compiler} ${fullCompilerArgs} ${fullObjectFileArgs}`;\n\n  if (fullLinkerArgs && fullLinkerArgs !== '') {\n    commandLine += fullLinkerArgs;\n  }\n\n  commandLine = commandLine.replace('  ', ' ');\n\n  return commandLine;\n}\n\nfunction executeBuildTaskMsvcBased(\n  settingsProvider: SettingsProvider,\n  activeFolder: string,\n  buildMode: Builds,\n  language: Languages,\n  files: string[],\n  modeDir: string,\n  appendSymbol: string,\n  executablePath: string,\n) {\n  let compiler: string | undefined;\n  let standard: string | undefined;\n\n  if (language === Languages.cpp) {\n    compiler = SettingsProvider.MSVC_COMPILER_NAME;\n    standard = settingsProvider.cppStandard;\n  } else {\n    compiler = SettingsProvider.MSVC_COMPILER_NAME;\n    standard = settingsProvider.cStandard;\n  }\n\n  const useWarnings = settingsProvider.enableWarnings;\n  const warningsAsErrors = settingsProvider.warningsAsError;\n  let warnings: string = '';\n  if (useWarnings) {\n    warnings = settingsProvider.warnings.join(' ');\n  }\n  if (useWarnings && warningsAsErrors) {\n    warnings += ' -WX';\n  }\n  const includePaths = settingsProvider.includePaths;\n  const compilerArgs = settingsProvider.compilerArgs;\n  const linkerArgs = settingsProvider.linkerArgs;\n\n  let fullCompilerArgs = '';\n\n  if (useWarnings && warnings !== '') {\n    fullCompilerArgs += warnings;\n  }\n\n  // Note: The c standard in msvc is either c11 or c17\n  const old_standard = ['c89', 'c99', 'gnu89', 'gnu99'].some(\n    (ext) => settingsProvider.cStandard === ext,\n  );\n\n  if (standard && (language === Languages.cpp || !old_standard)) {\n    fullCompilerArgs += ` /std:${standard}`;\n  }\n  if (language === Languages.c) {\n    if (old_standard) {\n      fullCompilerArgs += ' /D_CRT_SECURE_NO_WARNINGS';\n    }\n  }\n\n  if (buildMode === Builds.debug) {\n    fullCompilerArgs += ' /Od /Zi';\n  } else {\n    fullCompilerArgs += ' /Ox /GL /DNDEBUG';\n  }\n  fullCompilerArgs += ' /EHsc';\n\n  if (includePaths && includePaths.length > 0) {\n    for (const includePath of includePaths) {\n      if (includePath.includes('$(default)')) continue;\n\n      const hasSpace = includePath.includes(' ');\n\n      if (hasSpace) {\n        fullCompilerArgs += ` /I\"${includePath}\"`;\n      } else {\n        fullCompilerArgs += ` /I${includePath}`;\n      }\n    }\n  }\n\n  let fullLinkerArgs: string = '';\n  if (linkerArgs && linkerArgs.length > 0) {\n    fullLinkerArgs += ' ' + linkerArgs.join(' ');\n  }\n  fullCompilerArgs += fullLinkerArgs;\n\n  if (compilerArgs && compilerArgs.length > 0) {\n    fullCompilerArgs += ' ' + compilerArgs.join(' ');\n  }\n\n  let commandLine: string = `\"${settingsProvider.msvcBatchPath}\" ${settingsProvider.architecure} ${appendSymbol} `;\n\n  modeDir = modeDir.replace(activeFolder, '.');\n  executablePath = executablePath.replace(activeFolder, '.');\n  const pathArgs = `/Fd${modeDir}\\\\ /Fo${modeDir}\\\\ /Fe${executablePath}`;\n\n  let fullFileArgs: string = '';\n  for (const file of files) {\n    const fileExtension = path.parse(file).ext;\n\n    if (language === Languages.c && !isCSourceFile(fileExtension)) {\n      continue;\n    } else if (language === Languages.cpp && !isCppSourceFile(fileExtension)) {\n      continue;\n    }\n\n    const hasSpace = file.includes(' ');\n\n    if (hasSpace) {\n      fullFileArgs += ` .\\\\\"${file}\"`;\n    } else {\n      fullFileArgs += ` .\\\\${file}`;\n    }\n  }\n\n  if (fullFileArgs === '') return;\n\n  commandLine += ` cd ${activeFolder} &&`;\n  commandLine += `${compiler} ${fullCompilerArgs} ${pathArgs} ${fullFileArgs}`;\n\n  return commandLine;\n}\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport {\n\tpathExists,\n\treplaceBackslashes,\n\trmdirRecursive,\n} from '../utils/fileUtils';\nimport { Builds, OperatingSystems } from '../utils/types';\nimport { getProcessExecution } from '../utils/vscodeUtils';\n\nconst EXTENSION_NAME = 'C_Cpp_Runner';\n\nexport async function executeCleanTask(\n  activeFolder: string,\n  buildMode: Builds,\n  workspaceFolder: string,\n  operatingSystem: OperatingSystems,\n) {\n  const buildDir = path.join(activeFolder, 'build');\n  const modeDir = path.join(buildDir, `${buildMode}`);\n\n  let relativeModeDir = modeDir.replace(workspaceFolder, '');\n  relativeModeDir = replaceBackslashes(relativeModeDir);\n\n  const commandLine = `echo Cleaning ${relativeModeDir}...`;\n\n  if (!pathExists(modeDir)) return;\n\n  rmdirRecursive(modeDir);\n  if (!commandLine) return;\n\n  const task_name = 'Clean';\n\n  const execution = getProcessExecution(\n    operatingSystem,\n    false,\n    commandLine,\n    activeFolder,\n  );\n\n  const definition = {\n    type: 'shell',\n    task: task_name,\n  };\n\n  const task = new vscode.Task(\n    definition,\n    vscode.TaskScope.Workspace,\n    task_name,\n    EXTENSION_NAME,\n    execution,\n  );\n\n  await vscode.tasks.executeTask(task);\n}\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport { pathExists, readJsonFile } from '../utils/fileUtils';\nimport { Builds, JsonLaunchConfig } from '../utils/types';\nimport { getLaunchConfigIndex } from '../utils/vscodeUtils';\n\nconst CONFIG_NAME = 'C/C++ Runner: Debug Session';\n\nexport async function runDebugger(\n  activeFolder: string,\n  workspaceFolder: string,\n  buildMode: Builds,\n) {\n  const uriWorkspaceFolder = vscode.Uri.file(workspaceFolder);\n  const folder = vscode.workspace.getWorkspaceFolder(uriWorkspaceFolder);\n  const launchPath = path.join(workspaceFolder, '.vscode', 'launch.json');\n\n  const configJson: JsonLaunchConfig | undefined = readJsonFile(launchPath);\n\n  if (!configJson) return;\n\n  const configIdx = getLaunchConfigIndex(configJson, CONFIG_NAME);\n\n  if (configIdx === undefined) return;\n\n  const buildDir = path.join(activeFolder, 'build');\n  const modeDir = path.join(buildDir, `${buildMode}`);\n\n  if (!pathExists(modeDir)) return;\n\n  if (\n    !configJson.configurations === undefined ||\n    !configJson.configurations[configIdx] === undefined\n  )\n    return;\n\n  await vscode.debug.startDebugging(\n    folder,\n    configJson.configurations[configIdx] as vscode.DebugConfiguration,\n  );\n}\n","import * as path from 'path';\r\nimport * as vscode from 'vscode';\r\n\r\nimport { pathExists } from '../utils/fileUtils';\r\nimport { Builds, OperatingSystems } from '../utils/types';\r\nimport { getProcessExecution } from '../utils/vscodeUtils';\r\n\r\nconst EXTENSION_NAME = 'C_Cpp_Runner';\r\n\r\nexport async function executeRunTask(\r\n  activeFolder: string,\r\n  buildMode: Builds,\r\n  argumentsString: string | undefined,\r\n  operatingSystem: OperatingSystems,\r\n) {\r\n  const modeDir = path.join('build', buildMode);\r\n\r\n  if (!pathExists(path.join(activeFolder, modeDir))) return;\r\n\r\n  let executableName: string;\r\n  let executablePath: string;\r\n\r\n  if (operatingSystem === OperatingSystems.windows) {\r\n    executableName = `out${buildMode}.exe`;\r\n    executablePath = `.\\\\${path.join(modeDir, executableName)}`;\r\n  } else {\r\n    executableName = `out${buildMode}`;\r\n    executablePath = `./${path.join(modeDir, executableName)}`;\r\n  }\r\n\r\n  let commandLine: string = '';\r\n  const executablePathHasSpace = executablePath.includes(' ');\r\n\r\n  if (executablePathHasSpace) {\r\n    commandLine = `\"${executablePath}\"`;\r\n  } else {\r\n    commandLine = executablePath;\r\n  }\r\n\r\n  if (argumentsString) {\r\n    commandLine += ` ${argumentsString.replace(/\"/g, '')}`;\r\n  }\r\n\r\n  if (!commandLine) return;\r\n\r\n  const task_name = 'Run';\r\n\r\n  const execution = getProcessExecution(\r\n    operatingSystem,\r\n    false,\r\n    commandLine,\r\n    activeFolder,\r\n  );\r\n\r\n  const definition = {\r\n    type: 'shell',\r\n    task: task_name,\r\n  };\r\n\r\n  const task = new vscode.Task(\r\n    definition,\r\n    vscode.TaskScope.Workspace,\r\n    task_name,\r\n    EXTENSION_NAME,\r\n    execution,\r\n  );\r\n\r\n  await vscode.tasks.executeTask(task);\r\n}\r\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport { executeBuildTask } from './executor/builder';\nimport { executeCleanTask } from './executor/cleaner';\nimport { runDebugger } from './executor/debugger';\nimport { executeRunTask } from './executor/runner';\nimport { folderHandler } from './handler/folderHandler';\nimport { modeHandler } from './handler/modeHandler';\nimport {\n\tupdateBuildStatus,\n\tupdateCleanStatus,\n\tupdateDebugStatus,\n\tupdateFolderStatus,\n\tupdateModeStatus,\n\tupdateRunStatus,\n} from './items/statusBarItems';\nimport { LaunchProvider } from './provider/launchProvider';\nimport { PropertiesProvider } from './provider/propertiesProvider';\nimport { SettingsProvider } from './provider/settingsProvider';\nimport { foldersInDir, mkdirRecursive, pathExists } from './utils/fileUtils';\nimport { Builds } from './utils/types';\nimport {\n\tcreateStatusBarItem,\n\tdisposeItem,\n\tgetActivationState,\n\tisCmakeProject,\n\tsetContextValue,\n\tupdateActivationState,\n} from './utils/vscodeUtils';\n\nlet folderContextMenuDisposable: vscode.Disposable | undefined;\nlet commandHandlerDisposable: vscode.Disposable | undefined;\nlet commandToggleStateDisposable: vscode.Disposable | undefined;\nlet commandFolderDisposable: vscode.Disposable | undefined;\nlet commandModeDisposable: vscode.Disposable | undefined;\nlet commandBuildDisposable: vscode.Disposable | undefined;\nlet commandRunDisposable: vscode.Disposable | undefined;\nlet commandBuildSingleFileDisposable: vscode.Disposable | undefined;\nlet commandRunSingleFileDisposable: vscode.Disposable | undefined;\nlet commandDebugSingleFileDisposable: vscode.Disposable | undefined;\nlet commandDebugDisposable: vscode.Disposable | undefined;\nlet commandCleanDisposable: vscode.Disposable | undefined;\nlet commandArgumentDisposable: vscode.Disposable | undefined;\nlet commandResetDisposable: vscode.Disposable | undefined;\nlet eventConfigurationDisposable: vscode.Disposable | undefined;\nlet eventRenameFilesDisposable: vscode.Disposable | undefined;\nlet eventDeleteFilesDisposable: vscode.Disposable | undefined;\n\nlet settingsProvider: SettingsProvider | undefined;\nlet launchProvider: LaunchProvider | undefined;\nlet propertiesProvider: PropertiesProvider | undefined;\n\nlet folderStatusBar: vscode.StatusBarItem | undefined;\nlet modeStatusBar: vscode.StatusBarItem | undefined;\nlet buildStatusBar: vscode.StatusBarItem | undefined;\nlet runStatusBar: vscode.StatusBarItem | undefined;\nlet debugStatusBar: vscode.StatusBarItem | undefined;\nlet cleanStatusBar: vscode.StatusBarItem | undefined;\nlet argumentsString: string | undefined;\n\nlet workspaceFolder: string | undefined;\nlet activeFolder: string | undefined;\nlet buildMode: Builds = Builds.debug;\nlet showStatusBarItems: boolean = true;\nlet createExtensionFiles: boolean = true;\n\nconst EXTENSION_NAME = 'C_Cpp_Runner';\n\nexport let extensionContext: vscode.ExtensionContext | undefined;\nexport let extensionState: vscode.Memento | undefined;\nexport let extensionPath: string | undefined;\n\nexport function activate(context: vscode.ExtensionContext) {\n  if (\n    !vscode.workspace.workspaceFolders ||\n    vscode.workspace.workspaceFolders.length === 0\n  ) {\n    return;\n  }\n\n  if (\n    !vscode.workspace.workspaceFolders[0] ||\n    !vscode.workspace.workspaceFolders[0].uri\n  ) {\n    return;\n  }\n\n  if (vscode.workspace.workspaceFolders.length === 1) {\n    workspaceFolder = vscode.workspace.workspaceFolders[0].uri.fsPath;\n  }\n\n  const cmakeFileFound = isCmakeProject();\n\n  if (cmakeFileFound) {\n    showStatusBarItems = false;\n    createExtensionFiles = false;\n  }\n\n  extensionContext = context;\n  extensionPath = context.extensionPath;\n  extensionState = context.workspaceState;\n\n  setContextValue(`${EXTENSION_NAME}:activatedExtension`, true);\n  updateActivationState(true);\n\n  initFolderStatusBar();\n  initModeStatusBar();\n  initBuildStatusBar();\n  initRunStatusBar();\n  initDebugStatusBar();\n  initCleanStatusBar();\n\n  initBuildSingleFile();\n  initRunSingleFile();\n  initDebugSingleFile();\n\n  initWorkspaceProvider();\n  initWorkspaceDisposables();\n  initEventListener();\n}\n\nexport function deactivate() {\n  setContextValue(`${EXTENSION_NAME}:activatedExtension`, false);\n  updateActivationState(false);\n\n  disposeItem(folderStatusBar);\n  disposeItem(modeStatusBar);\n  disposeItem(buildStatusBar);\n  disposeItem(runStatusBar);\n  disposeItem(debugStatusBar);\n  disposeItem(cleanStatusBar);\n  disposeItem(folderContextMenuDisposable);\n  disposeItem(commandHandlerDisposable);\n  disposeItem(commandToggleStateDisposable);\n  disposeItem(commandFolderDisposable);\n  disposeItem(commandModeDisposable);\n  disposeItem(commandBuildDisposable);\n  disposeItem(commandRunDisposable);\n  disposeItem(commandBuildSingleFileDisposable);\n  disposeItem(commandRunSingleFileDisposable);\n  disposeItem(commandDebugSingleFileDisposable);\n  disposeItem(commandDebugDisposable);\n  disposeItem(commandCleanDisposable);\n  disposeItem(commandArgumentDisposable);\n  disposeItem(commandResetDisposable);\n  disposeItem(eventConfigurationDisposable);\n  disposeItem(eventDeleteFilesDisposable);\n  disposeItem(eventRenameFilesDisposable);\n}\n\nfunction initWorkspaceProvider() {\n  if (!workspaceFolder || !createExtensionFiles || !activeFolder) return;\n\n  if (!settingsProvider) {\n    settingsProvider = new SettingsProvider(workspaceFolder, activeFolder);\n  }\n\n  if (!propertiesProvider) {\n    propertiesProvider = new PropertiesProvider(\n      settingsProvider,\n      workspaceFolder,\n      activeFolder,\n    );\n  }\n\n  if (!launchProvider) {\n    launchProvider = new LaunchProvider(\n      settingsProvider,\n      workspaceFolder,\n      activeFolder,\n    );\n  }\n}\n\nfunction initWorkspaceDisposables() {\n  initArgumentParser();\n  initContextMenuDisposable();\n  initReset();\n  initToggleDisposable();\n}\n\nfunction initToggleDisposable() {\n  if (commandToggleStateDisposable) return;\n\n  commandToggleStateDisposable = vscode.commands.registerCommand(\n    `${EXTENSION_NAME}.toggleExtensionState`,\n    () => {\n      showStatusBarItems = !showStatusBarItems;\n      toggleStatusBarItems();\n      createExtensionFiles = !createExtensionFiles;\n      if (createExtensionFiles) {\n        initWorkspaceProvider();\n        initWorkspaceDisposables();\n\n        settingsProvider?.createFileData();\n        propertiesProvider?.createFileData();\n      }\n\n      const extensionIsDisabled = !showStatusBarItems && !createExtensionFiles;\n\n      if (extensionIsDisabled) {\n        setContextValue(\n          `${EXTENSION_NAME}:activatedExtension`,\n          !extensionIsDisabled,\n        );\n        updateActivationState(!extensionIsDisabled);\n      } else {\n        setContextValue(\n          `${EXTENSION_NAME}:activatedExtension`,\n          !extensionIsDisabled,\n        );\n        updateActivationState(!extensionIsDisabled);\n      }\n    },\n  );\n\n  extensionContext?.subscriptions.push(commandToggleStateDisposable);\n}\n\nfunction initContextMenuDisposable() {\n  if (folderContextMenuDisposable) return;\n\n  folderContextMenuDisposable = vscode.commands.registerCommand(\n    `${EXTENSION_NAME}.folderContextMenu`,\n    async (clickedUriItem: vscode.Uri, selectedUriItems: vscode.Uri[]) => {\n      if (selectedUriItems.length > 1) return;\n\n      const workspaceItem = vscode.workspace.getWorkspaceFolder(clickedUriItem);\n\n      if (!workspaceItem) return;\n\n      activeFolder = clickedUriItem.fsPath;\n      workspaceFolder = workspaceItem.uri.fsPath;\n      updateFolderData();\n    },\n  );\n\n  extensionContext?.subscriptions.push(folderContextMenuDisposable);\n}\n\nfunction initEventListener() {\n  initConfigurationChangeDisposable();\n  initFileRenameDisposable();\n  initFileDeleteDisposable();\n}\n\nfunction initConfigurationChangeDisposable() {\n  if (eventConfigurationDisposable) return;\n\n  eventConfigurationDisposable = vscode.workspace.onDidChangeConfiguration(\n    (e: vscode.ConfigurationChangeEvent) => {\n      const isChanged = e.affectsConfiguration(EXTENSION_NAME);\n      const extensionIsActive = getActivationState();\n\n      if (isChanged && extensionIsActive) {\n        settingsProvider?.updateFileContent();\n        propertiesProvider?.updateFileContent();\n        launchProvider?.updateFileContent();\n      }\n    },\n  );\n\n  extensionContext?.subscriptions.push(eventConfigurationDisposable);\n}\n\nfunction initFileRenameDisposable() {\n  if (eventRenameFilesDisposable) return;\n\n  eventRenameFilesDisposable = vscode.workspace.onDidRenameFiles(\n    (e: vscode.FileRenameEvent) => {\n      const extensionIsActive = getActivationState();\n      if (!extensionIsActive) return;\n\n      e.files.forEach((file) => {\n        const oldName = file.oldUri.fsPath;\n        const newName = file.newUri.fsPath;\n\n        if (workspaceFolder && oldName === workspaceFolder) {\n          workspaceFolder = newName;\n          updateFolderData();\n        } else if (activeFolder && oldName === activeFolder) {\n          activeFolder = newName;\n          updateFolderData();\n        }\n      });\n    },\n  );\n\n  extensionContext?.subscriptions.push(eventRenameFilesDisposable);\n}\n\nfunction initFileDeleteDisposable() {\n  if (!eventDeleteFilesDisposable) return;\n\n  eventDeleteFilesDisposable = vscode.workspace.onDidDeleteFiles(\n    (e: vscode.FileDeleteEvent) => {\n      const extensionIsActive = getActivationState();\n      if (!extensionIsActive) return;\n\n      e.files.forEach((file) => {\n        const oldName = file.fsPath;\n\n        if (workspaceFolder && oldName === workspaceFolder) {\n          workspaceFolder = undefined;\n          updateFolderData();\n          updateFolderStatus(\n            folderStatusBar,\n            workspaceFolder,\n            activeFolder,\n            showStatusBarItems,\n          );\n        } else if (activeFolder && oldName === activeFolder) {\n          activeFolder = undefined;\n          updateFolderData();\n          updateFolderStatus(\n            folderStatusBar,\n            workspaceFolder,\n            activeFolder,\n            showStatusBarItems,\n          );\n        }\n      });\n    },\n  );\n\n  extensionContext?.subscriptions.push(eventDeleteFilesDisposable);\n}\n\nfunction toggleStatusBarItems() {\n  if (showStatusBarItems) {\n    folderStatusBar?.show();\n    modeStatusBar?.show();\n    buildStatusBar?.show();\n    runStatusBar?.show();\n    debugStatusBar?.show();\n    cleanStatusBar?.show();\n  } else {\n    folderStatusBar?.hide();\n    modeStatusBar?.hide();\n    buildStatusBar?.hide();\n    runStatusBar?.hide();\n    debugStatusBar?.hide();\n    cleanStatusBar?.hide();\n  }\n}\n\nfunction updateFolderData() {\n  initWorkspaceProvider();\n  initWorkspaceDisposables();\n  argumentsString = '';\n\n  if (workspaceFolder && activeFolder) {\n    if (settingsProvider) {\n      settingsProvider.updateFolderData(workspaceFolder);\n      settingsProvider.updateFileContent();\n\n      if (propertiesProvider) {\n        propertiesProvider.updateFolderData(workspaceFolder);\n      }\n\n      if (launchProvider) {\n        launchProvider.updateFolderData(workspaceFolder, activeFolder);\n        launchProvider.updateModeData(buildMode);\n        launchProvider?.updateArgumentsData(argumentsString);\n        launchProvider.updateFileContent();\n      }\n    }\n  }\n\n  if (folderStatusBar) {\n    updateFolderStatus(\n      folderStatusBar,\n      workspaceFolder,\n      activeFolder,\n      showStatusBarItems,\n    );\n  }\n  if (modeStatusBar) {\n    updateModeStatus(\n      modeStatusBar,\n      showStatusBarItems,\n      activeFolder,\n      buildMode,\n    );\n  }\n  if (buildStatusBar) {\n    updateBuildStatus(buildStatusBar, showStatusBarItems, activeFolder);\n  }\n  if (runStatusBar) {\n    updateRunStatus(runStatusBar, showStatusBarItems, activeFolder);\n  }\n  if (cleanStatusBar) {\n    updateCleanStatus(cleanStatusBar, showStatusBarItems, activeFolder);\n  }\n  if (debugStatusBar) {\n    updateDebugStatus(debugStatusBar, showStatusBarItems, activeFolder);\n  }\n}\n\nfunction initFolderStatusBar() {\n  if (folderStatusBar) return;\n\n  folderStatusBar = createStatusBarItem();\n  extensionContext?.subscriptions.push(folderStatusBar);\n\n  const workspaceFolders = vscode.workspace.workspaceFolders;\n  if (workspaceFolders) {\n    if (workspaceFolders.length === 1) {\n      if (!workspaceFolders[0] || !workspaceFolders[0].uri.fsPath) return;\n\n      const workspaceFolderFs = workspaceFolders[0].uri.fsPath;\n      const folders = foldersInDir(workspaceFolderFs);\n      if (folders.length === 0) {\n        workspaceFolder = workspaceFolderFs;\n        activeFolder = workspaceFolderFs;\n        updateFolderData();\n      } else {\n        updateFolderStatus(\n          folderStatusBar,\n          workspaceFolder,\n          activeFolder,\n          showStatusBarItems,\n        );\n      }\n    } else {\n      updateFolderStatus(\n        folderStatusBar,\n        workspaceFolder,\n        activeFolder,\n        showStatusBarItems,\n      );\n    }\n  }\n\n  if (commandFolderDisposable) return;\n\n  const commandName = `${EXTENSION_NAME}.folder`;\n  commandFolderDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      const ret = await folderHandler(settingsProvider);\n      if (ret && ret.activeFolder && ret.workspaceFolder) {\n        activeFolder = ret.activeFolder;\n        workspaceFolder = ret.workspaceFolder;\n        updateFolderData();\n      }\n    },\n  );\n\n  folderStatusBar.command = commandName;\n  extensionContext?.subscriptions.push(commandFolderDisposable);\n}\n\nfunction initModeStatusBar() {\n  if (modeStatusBar) return;\n\n  modeStatusBar = createStatusBarItem();\n  extensionContext?.subscriptions.push(modeStatusBar);\n  updateModeStatus(modeStatusBar, showStatusBarItems, activeFolder, buildMode);\n\n  const commandName = `${EXTENSION_NAME}.mode`;\n  commandModeDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      const pickedMode = await modeHandler();\n      if (pickedMode) {\n        buildMode = pickedMode;\n\n        updateModeStatus(\n          modeStatusBar,\n          showStatusBarItems,\n          activeFolder,\n          buildMode,\n        );\n\n        if (!launchProvider) return;\n        launchProvider.updateModeData(buildMode);\n        launchProvider.updateFileContent();\n      }\n    },\n  );\n\n  modeStatusBar.command = commandName;\n  extensionContext?.subscriptions.push(commandModeDisposable);\n}\n\nfunction initArgumentParser() {\n  if (commandArgumentDisposable) return;\n\n  const commandName = `${EXTENSION_NAME}.args`;\n\n  commandArgumentDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      argumentsString = await vscode.window.showInputBox();\n      launchProvider?.updateArgumentsData(argumentsString);\n      launchProvider?.updateFileContent();\n    },\n  );\n\n  extensionContext?.subscriptions.push(commandArgumentDisposable);\n}\n\nfunction initReset() {\n  if (commandResetDisposable) return;\n\n  const commandName = `${EXTENSION_NAME}.resetLocalSettings`;\n\n  commandResetDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      settingsProvider?.reset();\n      propertiesProvider?.updateFileContent();\n      launchProvider?.updateFileContent();\n    },\n  );\n\n  extensionContext?.subscriptions.push(commandResetDisposable);\n}\n\nfunction initBuildStatusBar() {\n  if (buildStatusBar) return;\n\n  buildStatusBar = createStatusBarItem();\n  extensionContext?.subscriptions.push(buildStatusBar);\n  updateBuildStatus(buildStatusBar, showStatusBarItems, activeFolder);\n\n  const commandName = `${EXTENSION_NAME}.build`;\n  commandBuildDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => buildTaskCallback(false),\n  );\n  buildStatusBar.command = commandName;\n  extensionContext?.subscriptions.push(commandBuildDisposable);\n}\n\nfunction initRunStatusBar() {\n  if (runStatusBar) return;\n\n  runStatusBar = createStatusBarItem();\n  extensionContext?.subscriptions.push(runStatusBar);\n  updateRunStatus(runStatusBar, showStatusBarItems, activeFolder);\n\n  const commandName = `${EXTENSION_NAME}.run`;\n  commandRunDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => runTaskCallback(),\n  );\n\n  runStatusBar.command = commandName;\n  extensionContext?.subscriptions.push(commandRunDisposable);\n}\n\nfunction initDebugStatusBar() {\n  if (debugStatusBar) return;\n\n  debugStatusBar = createStatusBarItem();\n  extensionContext?.subscriptions.push(debugStatusBar);\n  updateDebugStatus(debugStatusBar, showStatusBarItems, activeFolder);\n\n  const commandName = `${EXTENSION_NAME}.debug`;\n  commandDebugDisposable = vscode.commands.registerCommand(commandName, () =>\n    debugTaskCallback(),\n  );\n\n  debugStatusBar.command = commandName;\n  extensionContext?.subscriptions.push(commandDebugDisposable);\n}\n\nasync function initCleanStatusBar() {\n  if (cleanStatusBar) return;\n\n  cleanStatusBar = createStatusBarItem();\n  extensionContext?.subscriptions.push(cleanStatusBar);\n  updateCleanStatus(cleanStatusBar, showStatusBarItems, activeFolder);\n\n  const commandName = `${EXTENSION_NAME}.clean`;\n  commandCleanDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      cleanTaskCallback();\n    },\n  );\n\n  cleanStatusBar.command = commandName;\n  extensionContext?.subscriptions.push(commandCleanDisposable);\n}\n\nfunction initProviderBasedOnSingleFile() {\n  const currentFile = vscode.window.activeTextEditor?.document.fileName;\n  if (!currentFile) return;\n  const currentFolder = path.dirname(currentFile);\n  if (activeFolder !== currentFolder) {\n    activeFolder = currentFolder;\n    initWorkspaceProvider();\n    updateFolderData();\n  }\n}\n\nfunction initBuildSingleFile() {\n  const commandName = `${EXTENSION_NAME}.buildSingleFile`;\n  commandBuildSingleFileDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      initProviderBasedOnSingleFile();\n      buildTaskCallback(true);\n    },\n  );\n  extensionContext?.subscriptions.push(commandBuildSingleFileDisposable);\n}\n\nfunction initRunSingleFile() {\n  const commandName = `${EXTENSION_NAME}.runSingleFile`;\n  commandRunSingleFileDisposable = vscode.commands.registerCommand(\n    commandName,\n    async () => {\n      initProviderBasedOnSingleFile();\n      runTaskCallback();\n    },\n  );\n  extensionContext?.subscriptions.push(commandRunSingleFileDisposable);\n}\n\nfunction initDebugSingleFile() {\n  const commandName = `${EXTENSION_NAME}.debugSingleFile`;\n  commandDebugSingleFileDisposable = vscode.commands.registerCommand(\n    commandName,\n    () => {\n      initProviderBasedOnSingleFile();\n      debugTaskCallback();\n    },\n  );\n  extensionContext?.subscriptions.push(commandDebugSingleFileDisposable);\n}\n\nasync function buildTaskCallback(singleFileBuild: boolean) {\n  if (!activeFolder) return;\n\n  const buildDir = path.join(activeFolder, 'build');\n  const modeDir = path.join(buildDir, `${buildMode}`);\n\n  if (!pathExists(modeDir)) mkdirRecursive(modeDir);\n\n  if (!settingsProvider) return;\n\n  await executeBuildTask(\n    settingsProvider,\n    activeFolder,\n    buildMode,\n    singleFileBuild,\n  );\n}\n\nasync function runTaskCallback() {\n  if (!activeFolder) return;\n\n  const buildDir = path.join(activeFolder, 'build');\n  const modeDir = path.join(buildDir, `${buildMode}`);\n\n  if (!pathExists(modeDir)) return;\n\n  if (!settingsProvider) {\n    return;\n  }\n\n  await executeRunTask(\n    activeFolder,\n    buildMode,\n    argumentsString,\n    settingsProvider.operatingSystem,\n  );\n}\n\nasync function cleanTaskCallback() {\n  if (\n    !settingsProvider ||\n    !settingsProvider.operatingSystem ||\n    !activeFolder ||\n    !workspaceFolder\n  ) {\n    return;\n  }\n\n  await executeCleanTask(\n    activeFolder,\n    buildMode,\n    workspaceFolder,\n    settingsProvider.operatingSystem,\n  );\n}\n\nfunction debugTaskCallback() {\n  if (!activeFolder) return;\n  if (!workspaceFolder) return;\n\n  runDebugger(activeFolder, workspaceFolder, buildMode);\n}\n","import * as path from 'path';\r\nimport * as vscode from 'vscode';\r\n\r\nimport { SettingsProvider } from '../provider/settingsProvider';\r\nimport {\r\n\texcludePatternFromList,\r\n\tgetDirectoriesRecursive,\r\n\tincludePatternFromList,\r\n\tnaturalSort,\r\n\treplaceBackslashes,\r\n} from '../utils/fileUtils';\r\n\r\nexport async function folderHandler(\r\n  settingsProvider: SettingsProvider | undefined,\r\n) {\r\n  const workspacesFolders = vscode.workspace.workspaceFolders;\r\n\r\n  if (!workspacesFolders) return;\r\n\r\n  let foldersList: string[] = [];\r\n  workspacesFolders.forEach((folder) => {\r\n    const directories = [folder.name];\r\n    const recursiveDirectories = getDirectoriesRecursive(folder.uri.fsPath);\r\n    if (recursiveDirectories) {\r\n      directories.push(...recursiveDirectories);\r\n    }\r\n\r\n    directories.forEach((dir) => {\r\n      let text = dir.replace(folder.uri.fsPath, folder.name);\r\n      text = replaceBackslashes(text);\r\n      foldersList.push(text);\r\n    });\r\n\r\n    if (settingsProvider) {\r\n      foldersList = includePatternFromList(\r\n        settingsProvider.includeSearch,\r\n        foldersList,\r\n      );\r\n    }\r\n\r\n    if (settingsProvider) {\r\n      foldersList = excludePatternFromList(\r\n        settingsProvider.excludeSearch,\r\n        foldersList,\r\n      );\r\n    } else {\r\n      foldersList = excludePatternFromList(\r\n        SettingsProvider.DEFAULT_EXCLUDE_SEARCH,\r\n        foldersList,\r\n      );\r\n    }\r\n\r\n    // XXX: Quick fix for double folder names due to include pattern\r\n    const foldersSet = new Set(foldersList);\r\n    foldersList = Array.from(foldersSet);\r\n    foldersList = naturalSort(foldersList);\r\n  });\r\n\r\n  const activeFolderStr = await vscode.window.showQuickPick(foldersList, {\r\n    placeHolder: 'Select folder to init the C/C++ Runner extension.',\r\n  });\r\n  let activeFolder: string | undefined;\r\n  let workspaceFolder: string | undefined;\r\n\r\n  if (activeFolderStr) {\r\n    const folderSplit = activeFolderStr.split('/');\r\n    const workspaceName = folderSplit[0];\r\n    workspacesFolders.forEach((folder) => {\r\n      if (folder.name === workspaceName) {\r\n        workspaceFolder = folder.uri.fsPath;\r\n      }\r\n    });\r\n\r\n    if (workspaceFolder) {\r\n      activeFolder = path.join(workspaceFolder, ...folderSplit.slice(1));\r\n    }\r\n  }\r\n\r\n  return { activeFolder, workspaceFolder };\r\n}\r\n","import * as vscode from 'vscode';\n\nimport { Builds } from '../utils/types';\n\nexport async function modeHandler() {\n  const combinations = [Builds.debug, Builds.release];\n\n  const pickedCombination = await vscode.window.showQuickPick(combinations, {\n    placeHolder: 'Select a build mode',\n  });\n\n  if (!pickedCombination) return undefined;\n\n  const pickedMode = pickedCombination.includes(Builds.debug)\n    ? Builds.debug\n    : Builds.release;\n\n  return pickedMode;\n}\n","import * as path from 'path';\r\nimport * as vscode from 'vscode';\r\n\r\nimport { replaceBackslashes } from '../utils/fileUtils';\r\nimport { Builds } from '../utils/types';\r\n\r\nexport function updateFolderStatus(\r\n  status: vscode.StatusBarItem | undefined,\r\n  workspaceFolder: string | undefined,\r\n  activeFolder: string | undefined,\r\n  showStatusBarItems: boolean,\r\n) {\r\n  if (!status) return;\r\n\r\n  if (workspaceFolder && activeFolder) {\r\n    const workspaceName = path.basename(workspaceFolder);\r\n    let text = activeFolder.replace(workspaceFolder, workspaceName);\r\n\r\n    text = replaceBackslashes(text);\r\n    const dirs = text.split('/');\r\n\r\n    if (dirs.length > 2) {\r\n      const lastElement = dirs.length - 1;\r\n      text = `${dirs[0]}/.../${dirs[lastElement]}`;\r\n    }\r\n\r\n    status.color = '';\r\n    status.text = `$(folder-active) ${text}`;\r\n  } else {\r\n    status.color = '#ffff00';\r\n    status.text = '$(alert) Select folder.';\r\n  }\r\n\r\n  if (showStatusBarItems) {\r\n    status.show();\r\n  } else {\r\n    status.hide();\r\n  }\r\n}\r\n\r\nexport function updateModeStatus(\r\n  status: vscode.StatusBarItem | undefined,\r\n  showStatusBarItems: boolean,\r\n  activeFolder: string | undefined,\r\n  buildMode: Builds,\r\n) {\r\n  if (!status) return;\r\n\r\n  status.text = `$(tools) ${buildMode}`;\r\n  toggleShow(status, showStatusBarItems, activeFolder);\r\n}\r\n\r\nexport function updateBuildStatus(\r\n  status: vscode.StatusBarItem | undefined,\r\n  showStatusBarItems: boolean,\r\n  activeFolder: string | undefined,\r\n) {\r\n  if (!status) return;\r\n\r\n  status.text = `$(gear)`;\r\n  toggleShow(status, showStatusBarItems, activeFolder);\r\n}\r\n\r\nexport function updateRunStatus(\r\n  status: vscode.StatusBarItem | undefined,\r\n  showStatusBarItems: boolean,\r\n  activeFolder: string | undefined,\r\n) {\r\n  if (!status) return;\r\n\r\n  status.text = `$(play)`;\r\n  toggleShow(status, showStatusBarItems, activeFolder);\r\n}\r\n\r\nexport function updateDebugStatus(\r\n  status: vscode.StatusBarItem | undefined,\r\n  showStatusBarItems: boolean,\r\n  activeFolder: string | undefined,\r\n) {\r\n  if (!status) return;\r\n\r\n  status.text = `$(bug)`;\r\n  toggleShow(status, showStatusBarItems, activeFolder);\r\n}\r\n\r\nexport function updateCleanStatus(\r\n  status: vscode.StatusBarItem | undefined,\r\n  showStatusBarItems: boolean,\r\n  activeFolder: string | undefined,\r\n) {\r\n  if (!status) return;\r\n\r\n  status.text = `$(trash)`;\r\n  toggleShow(status, showStatusBarItems, activeFolder);\r\n}\r\n\r\nfunction toggleShow(\r\n  status: vscode.StatusBarItem | undefined,\r\n  showStatusBarItems: boolean,\r\n  activeFolder: string | undefined,\r\n) {\r\n  if (!status) return;\r\n\r\n  if (showStatusBarItems && activeFolder) {\r\n    status.show();\r\n  } else {\r\n    status.hide();\r\n  }\r\n}\r\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport { getActivationState } from '../utils/vscodeUtils';\n\nexport abstract class CallbackProvider {\n  protected _outputPath: string;\n  protected _vscodeDirectory: string;\n  protected _fileWatcherOnDelete: vscode.FileSystemWatcher | undefined;\n  protected _fileWatcherOnChange: vscode.FileSystemWatcher | undefined;\n\n  constructor(\n    protected _workspaceFolder: string,\n    protected templateFileName: string | undefined,\n    protected outputFileName: string,\n  ) {\n    this._vscodeDirectory = path.join(this._workspaceFolder, '.vscode');\n    this._outputPath = path.join(this._vscodeDirectory, outputFileName);\n\n    this.createFileWatcher();\n  }\n\n  protected createFileWatcher() {\n    const filePattern = new vscode.RelativePattern(\n      this._workspaceFolder,\n      '.vscode/**',\n    );\n\n    this._fileWatcherOnDelete = vscode.workspace.createFileSystemWatcher(\n      filePattern,\n      true,\n      true,\n      false,\n    );\n\n    this._fileWatcherOnChange = vscode.workspace.createFileSystemWatcher(\n      filePattern,\n      true,\n      false,\n      true,\n    );\n\n    this._fileWatcherOnDelete.onDidDelete((e: vscode.Uri) => {\n      const pathName = e.fsPath;\n      if (pathName === this._vscodeDirectory || pathName === this._outputPath) {\n        const extensionIsActive = getActivationState();\n        if (extensionIsActive) this.deleteCallback();\n      }\n    });\n\n    this._fileWatcherOnChange.onDidChange((e: vscode.Uri) => {\n      const pathName = e.fsPath;\n      if (pathName === this._outputPath) {\n        this.changeCallback();\n      }\n    });\n\n    return;\n  }\n\n  public abstract deleteCallback(): void;\n\n  public abstract changeCallback(): void;\n}\n","import * as path from 'path';\n\nimport { extensionPath } from '../extension';\nimport { mkdirRecursive, pathExists } from '../utils/fileUtils';\nimport { getActivationState } from '../utils/vscodeUtils';\nimport { CallbackProvider } from './callbackProvider';\n\nexport abstract class FileProvider extends CallbackProvider {\n  protected readonly templatePath: string | undefined;\n\n  constructor(\n    workspaceFolder: string,\n    templateFileName: string | undefined,\n    outputFileName: string,\n  ) {\n    super(workspaceFolder, templateFileName, outputFileName);\n\n    const templateDirectory = path.join(\n      extensionPath ? extensionPath : '',\n      'templates',\n    );\n\n    if (templateFileName) {\n      this.templatePath = path.join(templateDirectory, templateFileName);\n    }\n\n    if (!pathExists(this._vscodeDirectory)) {\n      mkdirRecursive(this._vscodeDirectory);\n    }\n  }\n\n  protected abstract updateCheck(): boolean;\n\n  public abstract writeFileData(): void;\n\n  public createFileData() {\n    if (!pathExists(this._vscodeDirectory)) {\n      mkdirRecursive(this._vscodeDirectory);\n    }\n\n    this.writeFileData();\n  }\n\n  public updateFileContent() {\n    this.writeFileData();\n  }\n\n  public deleteCallback() {\n    const extensionIsActive = getActivationState();\n    if (extensionIsActive) this.createFileData();\n  }\n\n  protected _updateFolderData(_workspaceFolder: string) {\n    this._workspaceFolder = _workspaceFolder;\n    this._vscodeDirectory = path.join(this._workspaceFolder, '.vscode');\n    this._outputPath = path.join(this._vscodeDirectory, this.outputFileName);\n    this.createFileWatcher();\n  }\n}\n","import * as path from 'path';\n\nimport {\n\tgetOccurenceIndicies,\n\tpathExists,\n\treadJsonFile,\n\treplaceBackslashes,\n\twriteJsonFile,\n} from '../utils/fileUtils';\nimport {\n\tArchitectures,\n\tBuilds,\n\tDebuggers,\n\tJsonLaunchConfig,\n\tOperatingSystems,\n} from '../utils/types';\nimport { getLaunchConfigIndex } from '../utils/vscodeUtils';\nimport { FileProvider } from './fileProvider';\nimport { SettingsProvider } from './settingsProvider';\n\nconst TEMPLATE_FILENAME = 'launch_template.json';\nconst OUTPUT_FILENAME = 'launch.json';\nconst CONFIG_NAME = 'C/C++ Runner: Debug Session';\n\nexport class LaunchProvider extends FileProvider {\n  public buildMode: Builds = Builds.debug;\n  public argumentsString: string[] | undefined;\n\n  constructor(\n    protected settings: SettingsProvider,\n    public workspaceFolder: string,\n    public activeFolder: string,\n  ) {\n    super(workspaceFolder, TEMPLATE_FILENAME, OUTPUT_FILENAME);\n\n    if (!this.activeFolder) {\n      this.activeFolder = this.workspaceFolder;\n    }\n\n    const updateRequired = this.updateCheck();\n\n    if (updateRequired && activeFolder) {\n      this.createFileData();\n    }\n  }\n\n  protected updateCheck() {\n    if (!pathExists(this._outputPath)) {\n      return true;\n    } else {\n      const configJson: JsonLaunchConfig = readJsonFile(this._outputPath);\n\n      if (configJson) {\n        configJson.configurations.forEach((config) => {\n          const triplet: string = config.name;\n          if (triplet.includes(this.settings.operatingSystem)) {\n            return true;\n          }\n        });\n      }\n    }\n\n    return false;\n  }\n\n  public writeFileData() {\n    if (!this.workspaceFolder && !this.activeFolder) return;\n\n    if (!this.activeFolder) {\n      this.activeFolder = this.workspaceFolder;\n    }\n\n    if (!this.templatePath) return;\n\n    const launchTemplate: JsonLaunchConfig | undefined = readJsonFile(\n      this.templatePath,\n    );\n\n    if (!launchTemplate) return;\n\n    if (\n      this.settings.operatingSystem === OperatingSystems.windows &&\n      (this.settings.useMsvc || this.settings.cCompilerPath.includes('clang'))\n    ) {\n      this.msvcBasedDebugger(launchTemplate);\n      delete launchTemplate.configurations[0]?.externalConsole;\n    } else if (\n      this.settings.operatingSystem === OperatingSystems.windows &&\n      launchTemplate.configurations[0]\n    ) {\n      this.unixBasedDebugger(launchTemplate);\n      delete launchTemplate.configurations[0]?.console;\n      launchTemplate.configurations[0].externalConsole = true;\n    } else {\n      this.unixBasedDebugger(launchTemplate);\n      delete launchTemplate.configurations[0]?.console;\n    }\n\n    const launchLocal: JsonLaunchConfig | undefined = readJsonFile(\n      this._outputPath,\n    );\n\n    if (!launchLocal) {\n      writeJsonFile(this._outputPath, launchTemplate);\n      return;\n    }\n\n    let configIdx = getLaunchConfigIndex(launchLocal, CONFIG_NAME);\n\n    if (configIdx === undefined) {\n      configIdx = launchLocal.configurations.length;\n    }\n\n    if (!launchTemplate.configurations[0]) return;\n\n    if (launchLocal && launchLocal.configurations.length === configIdx) {\n      launchLocal.configurations.push(launchTemplate.configurations[0]);\n    } else {\n      if (!launchLocal.configurations[configIdx]) return;\n\n      launchLocal.configurations[configIdx] = launchTemplate.configurations[0];\n    }\n\n    writeJsonFile(this._outputPath, launchLocal);\n  }\n\n  public updateFolderData(workspaceFolder: string, activeFolder: string) {\n    this.activeFolder = activeFolder;\n    super._updateFolderData(workspaceFolder);\n  }\n\n  public updateModeData(buildMode: Builds) {\n    this.buildMode = buildMode;\n  }\n\n  public updateArgumentsData(argumentsString: string | undefined) {\n    if (argumentsString === undefined) return;\n\n    if (argumentsString === '') {\n      this.argumentsString = [];\n      return;\n    }\n\n    if (!argumentsString.includes(' ')) {\n      this.argumentsString = [argumentsString];\n    }\n\n    if (!argumentsString.includes('\"')) {\n      this.argumentsString = argumentsString.split(' ');\n      return;\n    }\n\n    const indicies = getOccurenceIndicies(argumentsString, '\"');\n    this.argumentsString = [];\n\n    const strsToReplace: string[] = [];\n    if (!indicies || indicies.length < 2) return;\n\n    for (let i = 0; i < indicies.length; i += 2) {\n      const sub = argumentsString.slice(\n        (indicies[i] as number) + 1,\n        indicies[i + 1],\n      );\n      this.argumentsString.push(sub);\n      strsToReplace.push(sub);\n    }\n\n    for (const strReplace of strsToReplace) {\n      argumentsString = argumentsString.replace(strReplace, '');\n    }\n\n    argumentsString = argumentsString.replace(/\"/g, '');\n    if (argumentsString.startsWith(' ')) {\n      argumentsString = argumentsString.slice(1);\n    }\n    if (argumentsString.endsWith(' ')) {\n      argumentsString = argumentsString.slice(0, argumentsString.length - 2);\n    }\n\n    this.argumentsString.push(\n      ...argumentsString.split(' ').filter((str: string) => Boolean(str)),\n    );\n\n    this.argumentsString.map((str: string) => str.replace(/\"/g, ''));\n  }\n\n  public changeCallback() {\n    const launchLocal: JsonLaunchConfig | undefined = readJsonFile(\n      this._outputPath,\n    );\n\n    if (!launchLocal) return;\n\n    const configIdx = getLaunchConfigIndex(launchLocal, CONFIG_NAME);\n\n    if (configIdx !== undefined) {\n      const currentConfig = launchLocal.configurations[configIdx];\n\n      if (currentConfig === undefined) return;\n\n      if (\n        currentConfig.miDebuggerPath !== this.settings.debuggerPath &&\n        currentConfig.miDebuggerPath\n      ) {\n        this.settings.debuggerPath = currentConfig.miDebuggerPath;\n\n        if (\n          currentConfig.miDebuggerPath.includes(Debuggers.gdb) ||\n          currentConfig.miDebuggerPath.includes(Debuggers.lldb)\n        ) {\n          this.settings.debuggerPath = currentConfig.miDebuggerPath;\n        }\n      }\n    } else {\n      this.writeFileData();\n    }\n  }\n\n  private msvcBasedDebugger(launchTemplate: JsonLaunchConfig) {\n    if (launchTemplate.configurations[0] === undefined) return;\n\n    launchTemplate.configurations[0].name = CONFIG_NAME;\n\n    delete launchTemplate.configurations[0].MIMode;\n    delete launchTemplate.configurations[0].miDebuggerPath;\n    delete launchTemplate.configurations[0].setupCommands;\n\n    launchTemplate.configurations[0].type = 'cppvsdbg';\n\n    if (this.argumentsString) {\n      launchTemplate.configurations[0].args = this.argumentsString;\n    } else {\n      launchTemplate.configurations[0].args = [];\n    }\n\n    launchTemplate.configurations[0].cwd = replaceBackslashes(\n      this.activeFolder,\n    );\n\n    const debugPath = path.join(\n      this.activeFolder,\n      `build/${this.buildMode}/out${this.buildMode}`,\n    );\n    launchTemplate.configurations[0].program = replaceBackslashes(debugPath);\n\n    return launchTemplate;\n  }\n\n  private unixBasedDebugger(launchTemplate: JsonLaunchConfig) {\n    if (launchTemplate.configurations[0] === undefined) return;\n\n    launchTemplate.configurations[0].name = CONFIG_NAME;\n    if (this.settings.debuggerPath) {\n      launchTemplate.configurations[0].MIMode =\n        this.settings.debuggerPath.includes(Debuggers.gdb)\n          ? Debuggers.gdb\n          : Debuggers.lldb;\n      launchTemplate.configurations[0].miDebuggerPath =\n        this.settings.debuggerPath;\n    } else {\n      launchTemplate.configurations[0].MIMode =\n        SettingsProvider.DEFAULT_DEBUGGER_PATH;\n      launchTemplate.configurations[0].miDebuggerPath =\n        SettingsProvider.DEFAULT_DEBUGGER_PATH;\n    }\n\n    if (OperatingSystems.mac === this.settings.operatingSystem) {\n      launchTemplate.configurations[0].stopAtEntry = true;\n      if (launchTemplate.configurations[0].setupCommands) {\n        delete launchTemplate.configurations[0].setupCommands;\n      }\n\n      if (this.settings.architecure === Architectures.ARM64) {\n        launchTemplate.configurations[0].type = 'lldb';\n\n        if (launchTemplate.configurations[0].miDebuggerPath) {\n          delete launchTemplate.configurations[0].miDebuggerPath;\n        }\n      }\n    }\n\n    if (this.argumentsString && this.argumentsString.length > 0) {\n      launchTemplate.configurations[0].args = this.argumentsString;\n    } else {\n      launchTemplate.configurations[0].args = [];\n    }\n\n    if (this.settings.operatingSystem === OperatingSystems.windows) {\n      launchTemplate.configurations[0].cwd = replaceBackslashes(\n        this.activeFolder,\n      );\n    } else {\n      launchTemplate.configurations[0].cwd = this.activeFolder;\n    }\n\n    const debugPath = path.join(\n      this.activeFolder,\n      `build/${this.buildMode}/out${this.buildMode}`,\n    );\n    if (this.settings.operatingSystem === OperatingSystems.windows) {\n      launchTemplate.configurations[0].program = replaceBackslashes(debugPath);\n    } else {\n      launchTemplate.configurations[0].program = debugPath;\n    }\n\n    return launchTemplate;\n  }\n}\n","import * as path from 'path';\n\nimport {\n\tpathExists,\n\treadJsonFile,\n\treplaceBackslashes,\n\twriteJsonFile,\n} from '../utils/fileUtils';\nimport { arraysEqual } from '../utils/general';\nimport { commandExists } from '../utils/systemUtils';\nimport {\n\tArchitectures,\n\tCompilerSystems,\n\tJsonPropertiesConfig,\n\tJsonPropertiesConfigEntry,\n\tOperatingSystems,\n} from '../utils/types';\nimport { FileProvider } from './fileProvider';\nimport { SettingsProvider } from './settingsProvider';\n\nconst TEMPLATE_FILENAME = 'properties_template.json';\nconst OUTPUT_FILENAME = 'c_cpp_properties.json';\nconst INCLUDE_PATTERN = '${workspaceFolder}/**';\n\nexport class PropertiesProvider extends FileProvider {\n  protected lastConfig: JsonPropertiesConfig | undefined;\n  constructor(\n    protected settings: SettingsProvider,\n    public workspaceFolder: string,\n    public activeFolder: string | undefined,\n  ) {\n    super(workspaceFolder, TEMPLATE_FILENAME, OUTPUT_FILENAME);\n\n    const updateRequired = this.updateCheck();\n\n    if (updateRequired && activeFolder) {\n      this.createFileData();\n    }\n\n    if (pathExists(this._outputPath)) {\n      this.lastConfig = readJsonFile(this._outputPath);\n    }\n  }\n\n  protected updateCheck() {\n    if (!pathExists(this._outputPath)) return true;\n\n    const currentConfig: JsonPropertiesConfig = readJsonFile(this._outputPath);\n\n    if (!currentConfig) return true;\n\n    const currentConfigEntry = currentConfig.configurations[0];\n\n    if (currentConfigEntry === undefined) return true;\n\n    const triplet: string = currentConfigEntry.name;\n    if (!triplet.includes(this.settings.operatingSystem)) return true;\n\n    if (\n      this.settings.useMsvc &&\n      !currentConfigEntry.intelliSenseMode.includes('msvc')\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  public async writeFileData() {\n    let configLocal: JsonPropertiesConfig | undefined;\n\n    if (!this.templatePath) return;\n\n    if (!pathExists(this._outputPath)) {\n      configLocal = readJsonFile(this.templatePath);\n    } else {\n      configLocal = readJsonFile(this._outputPath);\n    }\n\n    if (!configLocal) return;\n\n    if (!this.settings.cCompilerPath && !this.settings.useMsvc) return;\n\n    const os = this.settings.operatingSystem.toLowerCase();\n\n    let arch: string;\n    if (!this.settings.architecure) {\n      arch = Architectures.x64;\n    } else {\n      arch = this.settings.architecure.toLowerCase();\n    }\n\n    let compiler: CompilerSystems;\n    if (this.settings.useMsvc) {\n      compiler = CompilerSystems.msvc;\n    } else if (this.settings.cCompilerPath) {\n      compiler = this.settings.cCompilerPath.toLowerCase().includes('gcc')\n        ? CompilerSystems.gcc\n        : CompilerSystems.clang;\n    } else {\n      return;\n    }\n\n    const triplet = `${os}-${compiler}-${arch}`;\n\n    const configLocalEntry = configLocal.configurations[0];\n\n    if (configLocalEntry === undefined) return;\n\n    if (this.settings.includePaths.length > 0) {\n      configLocalEntry.includePath = [INCLUDE_PATTERN];\n      for (const path of this.settings.includePaths) {\n        const includePathSet = new Set(configLocalEntry.includePath);\n        if (\n          !includePathSet.has(path) &&\n          path !== INCLUDE_PATTERN &&\n          !path.includes('$(default)')\n        ) {\n          configLocalEntry.includePath.push(path);\n        }\n      }\n    } else {\n      configLocalEntry.includePath = [INCLUDE_PATTERN];\n    }\n    const old_standard = ['c89', 'c99', 'gnu89', 'gnu99'].some(\n      (ext) => this.settings.cStandard === ext,\n    );\n\n    configLocalEntry.cStandard = this.settings.cStandard\n      ? this.settings.cStandard\n      : this.settings.useMsvc\n      ? SettingsProvider.DEFAULT_C_STANDARD_MSVC\n      : '${default}';\n\n    if (\n      this.settings.operatingSystem === OperatingSystems.windows &&\n      this.settings.useMsvc &&\n      old_standard\n    ) {\n      configLocalEntry.cStandard = 'c11';\n    }\n\n    configLocalEntry.cppStandard = this.settings.cppStandard\n      ? this.settings.cppStandard\n      : '${default}';\n\n    if (this.settings.useMsvc) {\n      configLocalEntry.compilerPath = path.join(\n        this.settings.msvcToolsPath,\n        SettingsProvider.MSVC_COMPILER_NAME,\n      );\n    } else {\n      if (pathExists(this.settings.cCompilerPath)) {\n        configLocalEntry.compilerPath = this.settings.cCompilerPath;\n      } else {\n        // non-absolute compiler path\n        const ret = await commandExists(this.settings.cCompilerPath);\n\n        if (\n          !ret ||\n          !ret.p ||\n          ret.p.includes('perl') ||\n          ret.p.includes('ruby')\n        ) {\n          configLocalEntry.compilerPath = this.settings.cCompilerPath;\n        } else {\n          configLocalEntry.compilerPath = replaceBackslashes(ret.p);\n        }\n      }\n    }\n\n    // Since C/C++ Extension Version 1.4.0 cygwin is a linux triplet\n    if (\n      this.settings.isCygwin &&\n      !this.settings.useMsvc &&\n      this.settings.operatingSystem === OperatingSystems.windows\n    ) {\n      configLocalEntry.name = triplet.replace('windows', 'windows-cygwin');\n      configLocalEntry.intelliSenseMode = triplet.replace('windows', 'linux');\n    } else {\n      configLocalEntry.name = triplet;\n      configLocalEntry.intelliSenseMode = triplet;\n    }\n\n    writeJsonFile(this._outputPath, configLocal);\n  }\n\n  public updateFolderData(workspaceFolder: string) {\n    super._updateFolderData(workspaceFolder);\n  }\n\n  public changeCallback() {\n    const currentConfig: JsonPropertiesConfig | undefined = readJsonFile(\n      this._outputPath,\n    );\n\n    if (!this.lastConfig) {\n      this.lastConfig = readJsonFile(this._outputPath);\n\n      if (!this.lastConfig) return;\n    }\n\n    if (!currentConfig) return;\n\n    const currentConfigEntry: JsonPropertiesConfigEntry | undefined =\n      currentConfig.configurations[0];\n\n    if (currentConfigEntry === undefined) return;\n\n    const lastConfigEntry: JsonPropertiesConfigEntry | undefined =\n      this.lastConfig.configurations[0];\n\n    if (lastConfigEntry === undefined) return;\n\n    let updated = false;\n\n    if (currentConfigEntry.cStandard !== lastConfigEntry.cStandard) {\n      this.settings.cStandard =\n        currentConfigEntry.cStandard !== '${default}'\n          ? currentConfigEntry.cStandard\n          : '';\n      updated = true;\n    }\n\n    if (currentConfigEntry.cppStandard !== lastConfigEntry.cppStandard) {\n      this.settings.cppStandard =\n        currentConfigEntry.cppStandard !== '${default}'\n          ? currentConfigEntry.cppStandard\n          : '';\n      updated = true;\n    }\n\n    if (\n      currentConfigEntry.compilerPath !== lastConfigEntry.compilerPath &&\n      !currentConfigEntry.compilerPath.includes('cl.exe')\n    ) {\n      this.settings.cCompilerPath = currentConfigEntry.compilerPath;\n      updated = true;\n    }\n\n    if (\n      !arraysEqual(currentConfigEntry.includePath, lastConfigEntry.includePath)\n    ) {\n      this.settings.includePaths = currentConfigEntry.includePath.filter(\n        (path: string) =>\n          path !== INCLUDE_PATTERN && !path.includes('$(default)'),\n      );\n      updated = true;\n    }\n\n    if (updated) {\n      this.settings.writeFileData();\n\n      this.lastConfig = currentConfig;\n    }\n  }\n}\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport {\n\tfoldersInDir,\n\tlocalSettingExist,\n\tpathExists,\n\treadJsonFile,\n\treplaceBackslashes,\n\twriteJsonFile,\n} from '../utils/fileUtils';\nimport {\n\tgetCompilerArchitecture,\n\tgetOperatingSystem,\n} from '../utils/systemUtils';\nimport {\n\tArchitectures,\n\tCompilerSystems,\n\tJsonPropertiesConfig,\n\tJsonPropertiesConfigEntry,\n\tJsonSettings,\n\tOperatingSystems,\n} from '../utils/types';\nimport { FileProvider } from './fileProvider';\n\nconst OUTPUT_FILENAME = 'settings.json';\nconst EXTENSION_NAME = 'C_Cpp_Runner';\n\nexport class SettingsProvider extends FileProvider {\n  static DEFAULT_C_COMPILER_PATH = 'gcc';\n  static DEFAULT_CPP_COMPILER_PATH = 'g++';\n  static DEFAULT_DEBUGGER_PATH = 'gdb';\n  static DEFAULT_MSVC_BATCH_PATH =\n    'C:/Program Files/Microsoft Visual Studio/VR_NR/Community/VC/Auxiliary/Build/vcvarsall.bat';\n  static DEFAULT_MSVC_TOOLS_PATH = '';\n  static DEFAULT_C_STANDARD_UNIX = '';\n  static DEFAULT_C_STANDARD_MSVC = 'c11';\n  static DEFAULT_CPP_STANDARD = '';\n  static DEFAULT_INCLUDE_SEARCH = ['*', '**/*'];\n  static DEFAULT_EXCLUDE_SEARCH = [\n    '**/build',\n    '**/build/**',\n    '**/.*',\n    '**/.*/**',\n    '**/.vscode',\n    '**/.vscode/**',\n  ];\n\n  static DEFAULT_ENABLE_WARNINGS = true;\n  static DEFAULT_WARNINGS_AS_ERRORS = false;\n\n  static DEFAULT_WARNINGS_UNIX = ['-Wall', '-Wextra', '-Wpedantic'];\n  static DEFAULT_WARNINGS_MSVC = ['/W4'];\n  static DEFAULT_COMPILER_ARGS = [];\n  static DEFAULT_LINKER_ARGS = [];\n  static DEFAULT_INCLUDE_PATHS = [];\n\n  static DEFAULT_USE_MSVC = false;\n  static MSVC_COMPILER_NAME = 'cl.exe';\n\n  // Workspace data\n  private _configGlobal = vscode.workspace.getConfiguration(EXTENSION_NAME);\n\n  // Machine information\n  public operatingSystem = getOperatingSystem();\n  public architecure: Architectures | undefined;\n  public isCygwin: boolean = false;\n\n  // Settings\n  public cCompilerPath: string = SettingsProvider.DEFAULT_C_COMPILER_PATH;\n  public cppCompilerPath: string = SettingsProvider.DEFAULT_CPP_COMPILER_PATH;\n  public debuggerPath: string = SettingsProvider.DEFAULT_DEBUGGER_PATH;\n  public msvcBatchPath: string = SettingsProvider.DEFAULT_MSVC_BATCH_PATH;\n  public msvcToolsPath: string = SettingsProvider.DEFAULT_MSVC_TOOLS_PATH;\n  public useMsvc: boolean = SettingsProvider.DEFAULT_USE_MSVC;\n  public cStandard: string = SettingsProvider.DEFAULT_C_STANDARD_UNIX;\n  public cppStandard: string = SettingsProvider.DEFAULT_CPP_STANDARD;\n  public compilerArgs: string[] = SettingsProvider.DEFAULT_COMPILER_ARGS;\n  public linkerArgs: string[] = SettingsProvider.DEFAULT_LINKER_ARGS;\n  public includePaths: string[] = SettingsProvider.DEFAULT_INCLUDE_PATHS;\n  public includeSearch: string[] = SettingsProvider.DEFAULT_INCLUDE_SEARCH;\n  public excludeSearch: string[] = SettingsProvider.DEFAULT_EXCLUDE_SEARCH;\n  public enableWarnings: boolean = SettingsProvider.DEFAULT_ENABLE_WARNINGS;\n  public warningsAsError: boolean = SettingsProvider.DEFAULT_WARNINGS_AS_ERRORS;\n  public warnings: string[] = SettingsProvider.DEFAULT_WARNINGS_UNIX;\n\n  constructor(public workspaceFolder: string, public activeFolder: string) {\n    super(workspaceFolder, undefined, OUTPUT_FILENAME);\n\n    const settingsFileMissing = this.localFileExist('settings.json');\n    const settingsMissing = this.updateCheck();\n    const propertiesFileMissing = this.localFileExist('c_cpp_properties.json');\n\n    const allInfoMissing =\n      settingsMissing && propertiesFileMissing && activeFolder;\n    const onlySettingsMissing =\n      settingsFileMissing && !propertiesFileMissing && activeFolder;\n\n    if (allInfoMissing) {\n      this.loadGlobalSettings();\n      this.createFileData();\n      this.getArchitecture();\n      return;\n    }\n\n    if (onlySettingsMissing) {\n      this.getSettingsFromProperties();\n      this.createFileData();\n      this.getArchitecture();\n      return;\n    }\n\n    if (activeFolder) {\n      this.loadLocalSettings();\n      this.getArchitecture();\n      return;\n    }\n  }\n\n  protected updateCheck() {\n    if (!pathExists(this._outputPath)) {\n      return true;\n    } else if (!this.commandsAlreadyStored()) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private localFileExist(name: string) {\n    let settingsFileMissing = false;\n\n    const settingsPath = path.join(this._vscodeDirectory, name);\n    if (!pathExists(settingsPath)) {\n      settingsFileMissing = true;\n    }\n\n    return settingsFileMissing;\n  }\n\n  private commandsAlreadyStored() {\n    if (pathExists(this._outputPath)) {\n      const settingsJson: JsonSettings | undefined = readJsonFile(\n        this._outputPath,\n      );\n\n      if (!settingsJson) return false;\n\n      if (\n        localSettingExist(`${EXTENSION_NAME}.cCompilerPath`, settingsJson) &&\n        localSettingExist(`${EXTENSION_NAME}.cppCompilerPath`, settingsJson) &&\n        localSettingExist(`${EXTENSION_NAME}.debuggerPath`, settingsJson)\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /********************/\n  /*  MAIN FUNCTIONS  */\n  /********************/\n\n  public writeFileData() {\n    this.storeSettings();\n  }\n\n  public deleteCallback() {\n    this.storeSettings();\n  }\n\n  public changeCallback() {\n    this.loadLocalSettings();\n  }\n\n  public updateFolderData(workspaceFolder: string) {\n    super._updateFolderData(workspaceFolder);\n  }\n\n  private loadLocalSettings() {\n    const settingsLocal: JsonSettings | undefined = readJsonFile(\n      this._outputPath,\n    );\n\n    // mandatory\n    this.cCompilerPath = this.getSettingsValue(\n      settingsLocal,\n      'cCompilerPath',\n      SettingsProvider.DEFAULT_C_COMPILER_PATH,\n    );\n    this.cppCompilerPath = this.getSettingsValue(\n      settingsLocal,\n      'cppCompilerPath',\n      SettingsProvider.DEFAULT_CPP_COMPILER_PATH,\n    );\n    this.debuggerPath = this.getSettingsValue(\n      settingsLocal,\n      'debuggerPath',\n      SettingsProvider.DEFAULT_DEBUGGER_PATH,\n    );\n\n    // optional\n    this.msvcBatchPath = this.getSettingsValue(\n      settingsLocal,\n      'msvcBatchPath',\n      SettingsProvider.DEFAULT_MSVC_BATCH_PATH,\n    );\n    if (this.msvcBatchPath === SettingsProvider.DEFAULT_MSVC_BATCH_PATH) {\n      if (pathExists(this.msvcBatchPath.replace('VR_NR', '2022'))) {\n        this.msvcBatchPath = this.msvcBatchPath.replace('VR_NR', '2022');\n        this.update('msvcBatchPath', this.msvcBatchPath);\n      } else if (pathExists(this.msvcBatchPath.replace('VR_NR', '2017'))) {\n        this.msvcBatchPath = this.msvcBatchPath.replace('VR_NR', '2017');\n        this.update('msvcBatchPath', this.msvcBatchPath);\n      } else if (pathExists(this.msvcBatchPath.replace('VR_NR', '2015'))) {\n        this.msvcBatchPath = this.msvcBatchPath.replace('VR_NR', '2015');\n        this.update('msvcBatchPath', this.msvcBatchPath);\n      } else {\n        this.msvcBatchPath = '';\n        this.update('msvcBatchPath', this.msvcBatchPath);\n      }\n    }\n    this.useMsvc = this.getSettingsValue(\n      settingsLocal,\n      'useMsvc',\n      SettingsProvider.DEFAULT_USE_MSVC,\n    );\n\n    if (this.useMsvc) {\n      this.searchMsvcToolsPath();\n    }\n\n    this.enableWarnings = this.getSettingsValue(\n      settingsLocal,\n      'enableWarnings',\n      SettingsProvider.DEFAULT_ENABLE_WARNINGS,\n    );\n\n    this.warnings = this.getSettingsValue(\n      settingsLocal,\n      'warnings',\n      SettingsProvider.DEFAULT_WARNINGS_UNIX,\n    );\n\n    const msvcWarnings = this.warnings.some((warning: string) =>\n      warning.includes('/'),\n    );\n\n    if (this.useMsvc && !msvcWarnings) {\n      this.warnings = SettingsProvider.DEFAULT_WARNINGS_MSVC;\n    } else if (!this.useMsvc && msvcWarnings) {\n      this.warnings = SettingsProvider.DEFAULT_WARNINGS_UNIX;\n    }\n\n    this.warningsAsError = this.getSettingsValue(\n      settingsLocal,\n      'warningsAsError',\n      SettingsProvider.DEFAULT_WARNINGS_AS_ERRORS,\n    );\n\n    this.cStandard = this.getSettingsValue(\n      settingsLocal,\n      'cStandard',\n      SettingsProvider.DEFAULT_C_STANDARD_UNIX,\n    );\n\n    this.cppStandard = this.getSettingsValue(\n      settingsLocal,\n      'cppStandard',\n      SettingsProvider.DEFAULT_CPP_STANDARD,\n    );\n\n    this.compilerArgs = this.getSettingsValue(\n      settingsLocal,\n      'compilerArgs',\n      SettingsProvider.DEFAULT_COMPILER_ARGS,\n    );\n    this.linkerArgs = this.getSettingsValue(\n      settingsLocal,\n      'linkerArgs',\n      SettingsProvider.DEFAULT_LINKER_ARGS,\n    );\n    this.includePaths = this.getSettingsValue(\n      settingsLocal,\n      'includePaths',\n      SettingsProvider.DEFAULT_INCLUDE_PATHS,\n    );\n\n    this.includeSearch = this.getSettingsValue(\n      settingsLocal,\n      'includeSearch',\n      SettingsProvider.DEFAULT_INCLUDE_SEARCH,\n    );\n    this.excludeSearch = this.getSettingsValue(\n      settingsLocal,\n      'excludeSearch',\n      SettingsProvider.DEFAULT_EXCLUDE_SEARCH,\n    );\n  }\n\n  private getSettingsFromProperties() {\n    const propertiesPath = path.join(\n      this._vscodeDirectory,\n      'c_cpp_properties.json',\n    );\n    const propertiesConfig: JsonPropertiesConfig | undefined =\n      readJsonFile(propertiesPath);\n\n    if (!propertiesConfig) return;\n\n    const currentConfigEntry: JsonPropertiesConfigEntry | undefined =\n      propertiesConfig.configurations[0];\n\n    if (!currentConfigEntry) return;\n\n    /* Mandatory in settings.json */\n    this.cCompilerPath = this.getPropertiesValue(\n      currentConfigEntry,\n      'compilerPath',\n      this.cCompilerPath,\n    );\n\n    const isGccBased = this.cCompilerPath.includes(CompilerSystems.gcc);\n    const isClangBased = this.cCompilerPath.includes(CompilerSystems.clang);\n\n    if (isGccBased) {\n      const cppPath = this.cCompilerPath.replace('gcc', 'g++');\n      const dbgPath = this.cCompilerPath.replace('gcc', 'gdb');\n      this.cppCompilerPath = cppPath;\n      this.debuggerPath = dbgPath;\n    } else if (isClangBased) {\n      const cppPath = this.cCompilerPath.replace('clang', 'clang++');\n      const dbgPath = this.cCompilerPath.replace('clang', 'lldb');\n      this.cppCompilerPath = path.join(cppPath);\n      this.debuggerPath = dbgPath;\n    }\n\n    /* Optional in settings.json */\n    const _cStandard: string = this.getPropertiesValue(\n      currentConfigEntry,\n      'cStandard',\n      this.cStandard,\n    );\n    this.cStandard =\n      _cStandard !== '${default}'\n        ? _cStandard\n        : SettingsProvider.DEFAULT_C_STANDARD_UNIX;\n\n    const _cppStandard: string = this.getPropertiesValue(\n      currentConfigEntry,\n      'cppStandard',\n      this.cppStandard,\n    );\n    this.cppStandard =\n      _cppStandard !== '${default}'\n        ? _cppStandard\n        : SettingsProvider.DEFAULT_CPP_STANDARD;\n\n    const _includePaths: string[] = this.getPropertiesValue(\n      currentConfigEntry,\n      'includePath',\n      this.includePaths,\n    );\n    this.includePaths =\n      _includePaths.length !== 0\n        ? _includePaths\n        : SettingsProvider.DEFAULT_INCLUDE_PATHS;\n  }\n\n  private searchMsvcToolsPath() {\n    let msvcBasePath = this.msvcBatchPath.split('VC')[0];\n\n    if (!msvcBasePath) return;\n\n    msvcBasePath += 'VC/Tools/MSVC';\n\n    const installed_versions = foldersInDir(msvcBasePath);\n    const newst_version_path =\n      installed_versions[installed_versions.length - 1];\n    if (installed_versions.length === 0 || !newst_version_path) return;\n\n    const newst_version_path_splitted = newst_version_path.split('\\\\');\n    if (newst_version_path_splitted.length === 0) return;\n\n    const versionNumber =\n      newst_version_path_splitted[newst_version_path_splitted.length - 1];\n\n    if (!versionNumber) return;\n\n    let architecturePath: string;\n    if (\n      this.architecure === Architectures.x64 ||\n      this.architecure === undefined\n    ) {\n      architecturePath = 'bin/Hostx64/x64';\n    } else {\n      architecturePath = 'bin/Hostx86/x86';\n    }\n\n    if (!pathExists(architecturePath)) return;\n\n    this.msvcToolsPath = path.join(\n      msvcBasePath,\n      versionNumber,\n      architecturePath,\n    );\n  }\n\n  private getArchitecture() {\n    if (this.useMsvc) {\n      this.architecure = Architectures.x64;\n      this.isCygwin = false;\n      return;\n    }\n\n    if (this.cCompilerPath) {\n      const ret = getCompilerArchitecture(this.cCompilerPath);\n      this.architecure = ret.architecure;\n      this.isCygwin = ret.isCygwin;\n      return;\n    }\n\n    if (this.cppCompilerPath) {\n      const ret = getCompilerArchitecture(this.cppCompilerPath);\n      this.architecure = ret.architecure;\n      this.isCygwin = ret.isCygwin;\n      return;\n    }\n\n    this.architecure = Architectures.x64;\n    this.isCygwin = false;\n  }\n\n  public reset() {\n    this.loadGlobalSettings();\n    this.storeSettings();\n  }\n\n  private loadGlobalSettings() {\n    /* Mandatory in settings.json */\n    this.cCompilerPath = this.getGlobalSettingsValue(\n      'cCompilerPath',\n      SettingsProvider.DEFAULT_C_COMPILER_PATH,\n    );\n    this.cppCompilerPath = this.getGlobalSettingsValue(\n      'cppCompilerPath',\n      SettingsProvider.DEFAULT_CPP_COMPILER_PATH,\n    );\n    this.debuggerPath = this.getGlobalSettingsValue(\n      'debuggerPath',\n      SettingsProvider.DEFAULT_DEBUGGER_PATH,\n    );\n    this.msvcBatchPath = this.getGlobalSettingsValue(\n      'msvcBatchPath',\n      SettingsProvider.DEFAULT_MSVC_BATCH_PATH,\n    );\n    this.msvcToolsPath = this.getGlobalSettingsValue(\n      'msvcToolsPath',\n      SettingsProvider.DEFAULT_MSVC_TOOLS_PATH,\n    );\n    this.useMsvc = this.getGlobalSettingsValue(\n      'useMsvc',\n      SettingsProvider.DEFAULT_USE_MSVC,\n    );\n\n    /* Optional in settings.json */\n    this.enableWarnings = this.getGlobalSettingsValue(\n      'enableWarnings',\n      SettingsProvider.DEFAULT_ENABLE_WARNINGS,\n    );\n    this.warnings = this.getGlobalSettingsValue(\n      'warnings',\n      SettingsProvider.DEFAULT_WARNINGS_UNIX,\n    );\n    this.enableWarnings = this.getGlobalSettingsValue(\n      'enableWarnings',\n      SettingsProvider.DEFAULT_ENABLE_WARNINGS,\n    );\n    this.warningsAsError = this.getGlobalSettingsValue(\n      'warningsAsError',\n      SettingsProvider.DEFAULT_WARNINGS_AS_ERRORS,\n    );\n    this.cStandard = this.getGlobalSettingsValue(\n      'cStandard',\n      SettingsProvider.DEFAULT_C_STANDARD_UNIX,\n    );\n    this.cppStandard = this.getGlobalSettingsValue(\n      'cppStandard',\n      SettingsProvider.DEFAULT_CPP_STANDARD,\n    );\n    this.compilerArgs = this.getGlobalSettingsValue(\n      'compilerArgs',\n      SettingsProvider.DEFAULT_COMPILER_ARGS,\n    );\n    this.linkerArgs = this.getGlobalSettingsValue(\n      'linkerArgs',\n      SettingsProvider.DEFAULT_LINKER_ARGS,\n    );\n    this.includePaths = this.getGlobalSettingsValue(\n      'includePaths',\n      SettingsProvider.DEFAULT_INCLUDE_PATHS,\n    );\n    this.excludeSearch = this.getGlobalSettingsValue(\n      'excludeSearch',\n      SettingsProvider.DEFAULT_EXCLUDE_SEARCH,\n    );\n  }\n\n  private storeSettings() {\n    this.updateBasedOnEnv('cCompilerPath', this.cCompilerPath);\n    this.updateBasedOnEnv('cppCompilerPath', this.cppCompilerPath);\n    this.updateBasedOnEnv('debuggerPath', this.debuggerPath);\n\n    this.update('cStandard', this.cStandard);\n    this.update('cppStandard', this.cppStandard);\n\n    this.update('msvcBatchPath', this.msvcBatchPath);\n    this.update('useMsvc', this.useMsvc);\n\n    this.update('warnings', this.warnings);\n    this.update('enableWarnings', this.enableWarnings);\n    this.update('warningsAsError', this.warningsAsError);\n\n    this.update('compilerArgs', this.compilerArgs);\n    this.update('linkerArgs', this.linkerArgs);\n    this.update('includePaths', this.includePaths);\n\n    this.update('includeSearch', this.includeSearch);\n    this.update('excludeSearch', this.excludeSearch);\n  }\n\n  /********************/\n  /* HELPER FUNCTIONS */\n  /********************/\n\n  private getGlobalSettingsValue(name: string, defaultValue: any) {\n    const fullSettingInfo = this._configGlobal.inspect(name);\n    return fullSettingInfo?.globalValue\n      ? fullSettingInfo.globalValue\n      : defaultValue;\n  }\n\n  private getSettingsValue(\n    settingsLocal: JsonSettings | undefined,\n    name: string,\n    defaultValue: any,\n  ) {\n    const settingName = `${EXTENSION_NAME}.${name}`;\n\n    if (settingsLocal && settingsLocal[settingName] !== undefined) {\n      return settingsLocal[settingName];\n    }\n\n    return this.getGlobalSettingsValue(name, defaultValue);\n  }\n\n  private getPropertiesValue(\n    properties: JsonPropertiesConfigEntry | undefined,\n    name: keyof JsonPropertiesConfigEntry,\n    defaultValue: any,\n  ) {\n    if (properties && properties[name] !== undefined) {\n      return properties[name];\n    }\n\n    return defaultValue;\n  }\n\n  public update(key: string, value: any) {\n    let settingsJson: JsonSettings | undefined = readJsonFile(this._outputPath);\n\n    if (!settingsJson) settingsJson = {};\n\n    const settingName = `${EXTENSION_NAME}.${key}`;\n\n    settingsJson[settingName] = value;\n\n    writeJsonFile(this._outputPath, settingsJson);\n  }\n\n  private updateBasedOnEnv(settingsName: string, settingsValue: string) {\n    if (this.operatingSystem === OperatingSystems.windows) {\n      this.update(settingsName, replaceBackslashes(settingsValue));\n    } else {\n      this.update(settingsName, settingsValue);\n    }\n  }\n}\n","import * as fs from 'fs';\nimport * as JSON5 from 'json5';\nimport * as minimatch from 'minimatch';\nimport * as path from 'path';\n\nimport { JsonSettings, Languages } from './types';\n\nexport function replaceBackslashes(text: string) {\n  return text.replace(/\\\\/g, '/');\n}\n\nexport function mkdirRecursive(dir: string) {\n  try {\n    fs.mkdirSync(dir, { recursive: true });\n  } catch (err) {}\n}\n\nexport function rmdirRecursive(dir: string) {\n  try {\n    fs.rmdirSync(dir, { recursive: true });\n  } catch (err) {}\n}\n\nexport function filterOnString(names: string[], filterName: string) {\n  return names.filter((name) => !name.includes(filterName));\n}\n\nexport function pathExists(filepath: string) {\n  try {\n    fs.accessSync(filepath);\n  } catch (err) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isSourceFile(fileExt: string) {\n  const fileExtLower = fileExt.toLowerCase();\n\n  if (isHeaderFile(fileExtLower)) {\n    return false;\n  }\n\n  if (!(isCSourceFile(fileExtLower) || isCppSourceFile(fileExtLower))) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function addFileExtensionDot(fileExt: string) {\n  if (!fileExt.includes('.')) {\n    fileExt = `.${fileExt}`;\n  }\n\n  return fileExt;\n}\n\nexport function isHeaderFile(fileExtLower: string) {\n  fileExtLower = addFileExtensionDot(fileExtLower);\n  return ['.hpp', '.hh', '.hxx', '.h'].some((ext) => fileExtLower === ext);\n}\n\nexport function isCppSourceFile(fileExtLower: string) {\n  fileExtLower = addFileExtensionDot(fileExtLower);\n  return ['.cpp', '.cc', '.cxx'].some((ext) => fileExtLower === ext);\n}\n\nexport function isCSourceFile(fileExtLower: string) {\n  fileExtLower = addFileExtensionDot(fileExtLower);\n  return fileExtLower === '.c';\n}\n\nexport function getLanguage(dir: string) {\n  const files = filesInDir(dir);\n  const anyCppFile = files.some((file) => isCppSourceFile(path.extname(file)));\n\n  if (anyCppFile) {\n    return Languages.cpp;\n  } else {\n    return Languages.c;\n  }\n}\n\nexport function getDirectoriesRecursive(dir: fs.PathLike) {\n  const directories = foldersInDir(dir);\n\n  if (directories.length === 0) return;\n\n  directories.forEach((dir) =>\n    getDirectoriesRecursive(dir)?.forEach((newDir) => directories.push(newDir)),\n  );\n\n  return directories;\n}\n\nexport function readDir(dir: string | fs.PathLike) {\n  try {\n    return fs.readdirSync(dir, { withFileTypes: true });\n  } catch (err) {}\n}\n\nexport function filesInDir(dir: string) {\n  const fileDirents = readDir(dir);\n\n  if (!fileDirents) return [];\n\n  const files = fileDirents\n    .filter((file) => file.isFile())\n    .map((file) => file.name);\n\n  return files;\n}\n\nexport function includePatternFromList(\n  includeSearch: string[],\n  foldersList: string[],\n) {\n  const result: string[] = [];\n\n  for (const pattern of includeSearch) {\n    result.push(...foldersList.filter((folder) => minimatch(folder, pattern)));\n  }\n\n  return result;\n}\n\nexport function excludePatternFromList(\n  excludeSearch: string[],\n  foldersList: string[],\n) {\n  for (const pattern of excludeSearch) {\n    foldersList = foldersList.filter((folder) => !minimatch(folder, pattern));\n  }\n\n  return foldersList;\n}\n\nexport function foldersInDir(dir: fs.PathLike) {\n  const fileDirents = readDir(dir);\n\n  if (!fileDirents) return [];\n\n  const folders = fileDirents.filter((folder: fs.Dirent) =>\n    folder.isDirectory(),\n  );\n  const folderNames = folders.map((folder: fs.Dirent) =>\n    path.join(dir.toString(), folder.name),\n  );\n\n  return folderNames;\n}\n\nexport function readJsonFile(filepath: string) {\n  let configJson: any | undefined;\n\n  try {\n    const fileContent = fs.readFileSync(filepath, 'utf-8');\n    configJson = JSON5.parse(fileContent);\n  } catch (err) {}\n\n  return configJson;\n}\n\nexport function writeJsonFile(outputFilePath: string, jsonContent: any) {\n  if (jsonContent === undefined) return;\n\n  const dirname = path.dirname(outputFilePath);\n\n  if (!pathExists(dirname)) {\n    mkdirRecursive(dirname);\n  }\n\n  const jsonString = JSON.stringify(jsonContent, null, 2);\n\n  try {\n    fs.writeFileSync(outputFilePath, jsonString);\n  } catch (err) {}\n}\n\nexport function naturalSort(names: string[]) {\n  return names.sort((a, b) =>\n    a.localeCompare(b, undefined, {\n      numeric: true,\n      sensitivity: 'base',\n    }),\n  );\n}\n\nexport function localSettingExist(key: string, jsonData: JsonSettings) {\n  const commandPath = jsonData[key];\n\n  if (!commandPath) return false;\n\n  if (!pathExists(commandPath)) return false;\n\n  return true;\n}\n\nexport function hasPathSeperators(pathStr: string) {\n  return pathStr.includes('/') || pathStr.includes('\\\\');\n}\n\nexport function removeExtension(pathStr: string, ext: string) {\n  const extStr = addFileExtensionDot(ext);\n\n  if (pathStr.includes(extStr)) {\n    return pathStr.replace(extStr, '');\n  }\n\n  return pathStr;\n}\n\nexport function getBasename(pathStr: string) {\n  if (hasPathSeperators(pathStr)) {\n    return path.basename(pathStr);\n  }\n\n  return pathStr;\n}\n\nexport function getOccurenceIndicies(text: string, char: string) {\n  const indices = [];\n  for (let i = 0; i < text.length; i++) {\n    if (text[i] === char) indices.push(i);\n  }\n\n  return indices;\n}\n","export function arraysEqual(a: any[], b: any[]) {\n  if (a === b) return true;\n  if (a.length !== b.length) return false;\n\n  for (let i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\n","import { execSync } from 'child_process';\nimport { lookpath } from 'lookpath';\nimport { platform } from 'os';\n\nimport { Architectures, OperatingSystems } from './types';\n\nexport async function commandExists(command: string) {\n  let commandPath = await lookpath(command);\n\n  if (!commandPath) {\n    return { f: false, p: commandPath };\n  }\n\n  if (commandPath.includes('.EXE')) {\n    commandPath = commandPath.replace('.EXE', '.exe');\n  }\n\n  return { f: true, p: commandPath };\n}\n\nexport function getOperatingSystem() {\n  const platformName = platform();\n  let operatingSystem: OperatingSystems;\n\n  if (platformName === 'win32') {\n    operatingSystem = OperatingSystems.windows;\n  } else if (platformName === 'darwin') {\n    operatingSystem = OperatingSystems.mac;\n  } else {\n    operatingSystem = OperatingSystems.linux;\n  }\n\n  return operatingSystem;\n}\n\nexport function getCompilerArchitecture(compiler: string) {\n  const command = `${compiler} -dumpmachine`;\n  let byteArray: Buffer | undefined;\n\n  try {\n    byteArray = execSync(command);\n  } catch (err) {\n    byteArray = Buffer.from('x64', 'utf-8');\n  }\n\n  const str = String.fromCharCode(...byteArray);\n  let architecure = Architectures.x64;\n  let isCygwin = false;\n\n  if (str.toLowerCase().includes('arm')) {\n    architecure = Architectures.ARM64;\n  } else if (str.includes('64')) {\n    architecure = Architectures.x64;\n  } else {\n    architecure = Architectures.x86;\n  }\n\n  if (str.includes('cygwin')) {\n    isCygwin = true;\n  }\n\n  return { architecure: architecure, isCygwin: isCygwin };\n}\n","import * as vscode from 'vscode';\n\nexport interface JsonSettings {\n  [name: string]: string;\n}\n\nexport interface JsonPropertiesConfigEntry {\n  name: string;\n  includePath: string[];\n  compilerPath: string;\n  cStandard: string;\n  cppStandard: string;\n  intelliSenseMode: string;\n  compilerArgs: string[];\n}\n\nexport interface JsonPropertiesConfig {\n  configurations: JsonPropertiesConfigEntry[];\n}\n\nexport interface JsonLaunchConfigEntry extends vscode.DebugConfiguration {\n  type: string;\n  request: string;\n  args: string[];\n  stopAtEntry: boolean;\n  console?: string;\n  externalConsole?: boolean;\n  cwd: string;\n  environment: string[];\n  program: string;\n  MIMode?: string;\n  miDebuggerPath?: string;\n  setupCommands?: any[];\n}\n\nexport interface JsonLaunchConfig {\n  configurations: JsonLaunchConfigEntry[];\n}\n\nexport class Task extends vscode.Task {\n  override execution?: vscode.ProcessExecution;\n}\n\nexport enum Languages {\n  c = 'C',\n  cpp = 'Cpp',\n}\n\nexport enum CompilerSystems {\n  gcc = 'gcc',\n  clang = 'clang',\n  msvc = 'msvc'\n}\n\nexport enum Debuggers {\n  lldb = 'lldb',\n  gdb = 'gdb',\n}\n\nexport enum OperatingSystems {\n  windows = 'windows',\n  linux = 'linux',\n  mac = 'macos',\n}\n\nexport enum Architectures {\n  x86 = 'x86',\n  x64 = 'x64',\n  ARM64 = 'ARM64'\n}\n\nexport enum Builds {\n  debug = 'Debug',\n  release = 'Release',\n}\n","import * as path from 'path';\nimport * as vscode from 'vscode';\n\nimport { extensionState } from '../extension';\nimport { filesInDir, pathExists, readJsonFile } from './fileUtils';\nimport { JsonLaunchConfig, JsonSettings, OperatingSystems } from './types';\n\nconst STATUS_BAR_ALIGN = vscode.StatusBarAlignment.Left;\nconst STATUS_BAR_PRIORITY = 50;\n\nexport function disposeItem(disposableItem: vscode.Disposable | undefined) {\n  disposableItem?.dispose();\n}\n\nexport function createStatusBarItem() {\n  return vscode.window.createStatusBarItem(\n    STATUS_BAR_ALIGN,\n    STATUS_BAR_PRIORITY,\n  );\n}\n\nexport function setContextValue(key: string, value: any) {\n  return vscode.commands.executeCommand('setContext', key, value);\n}\n\nexport function getLaunchConfigIndex(\n  configJson: JsonLaunchConfig,\n  configName: string,\n) {\n  let configIdx = 0;\n\n  if (configJson) {\n    for (const config of configJson.configurations) {\n      if (config.name !== configName) {\n        configIdx++;\n      } else {\n        return configIdx;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nexport function updateActivationState(newState: boolean) {\n  extensionState?.update('activatedExtension', newState);\n}\n\nexport function getActivationState() {\n  if (extensionState) {\n    return <boolean>extensionState.get('activatedExtension');\n  }\n\n  return false;\n}\n\nexport function isCmakeProject() {\n  let cmakeFileFound = false;\n\n  const workspaceFodlers = vscode.workspace.workspaceFolders;\n  const cmakeExtensionName = 'cmake';\n  const cmakeSettingName = 'sourceDirectory';\n\n  if (workspaceFodlers) {\n    workspaceFodlers.forEach((folder) => {\n      if (!cmakeFileFound) {\n        const files = filesInDir(folder.uri.fsPath);\n        files.forEach((file) => {\n          if (file.toLowerCase() === 'CMakeLists.txt'.toLowerCase()) {\n            cmakeFileFound = true;\n          }\n        });\n\n        const settingsPath = path.join(\n          folder.uri.fsPath,\n          '.vscode',\n          'settings.json',\n        );\n\n        if (pathExists(settingsPath)) {\n          const configLocal: JsonSettings | undefined =\n            readJsonFile(settingsPath);\n\n          if (\n            configLocal &&\n            configLocal[`${cmakeExtensionName}.${cmakeSettingName}`]\n          ) {\n            cmakeFileFound = true;\n          }\n        }\n      }\n    });\n  }\n\n  if (!cmakeFileFound) {\n    const config = vscode.workspace.getConfiguration(cmakeExtensionName);\n    const cmakeSetting = config.get(cmakeSettingName);\n\n    if (cmakeSetting && cmakeSetting !== '${workspaceFolder}') {\n      cmakeFileFound = true;\n    }\n  }\n\n  return cmakeFileFound;\n}\n\nexport function getProcessExecution(\n  operatingSystem: OperatingSystems,\n  isMsvcBuildTask: boolean,\n  commandLine: string,\n  activeFolder: string,\n) {\n  const options = {\n    cwd: activeFolder,\n  };\n\n  if (operatingSystem === OperatingSystems.windows) {\n    return winProcessExecution(isMsvcBuildTask, commandLine, options);\n  } else {\n    return unixProcessExecution(commandLine, options);\n  }\n}\n\nfunction winProcessExecution(\n  isMsvcBuildTask: boolean,\n  commandLine: string,\n  options: { cwd: string },\n) {\n  const drive = process.env['SystemDrive'] ? process.env['SystemDrive'] : 'C:';\n  if (isMsvcBuildTask) {\n    const shellOptions: vscode.ShellExecutionOptions = {\n      executable: drive + '/Windows/System32/cmd.exe',\n      shellArgs: ['/d', '/c'],\n    };\n    return new vscode.ShellExecution(commandLine, shellOptions);\n  } else {\n    return new vscode.ProcessExecution(\n      drive + '/Windows/System32/cmd.exe',\n      ['/d', '/c', commandLine],\n      options,\n    );\n  }\n}\n\nfunction unixProcessExecution(commandLine: string, options: { cwd: string }) {\n  const standard_shell = process.env['SHELL']\n    ? process.env['SHELL']\n    : '/bin/bash';\n  return new vscode.ProcessExecution(\n    standard_shell,\n    ['-c', commandLine],\n    options,\n  );\n}\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/extension.ts\");\n",""],"names":[],"sourceRoot":""}